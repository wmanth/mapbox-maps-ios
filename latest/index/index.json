{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/migrate-to-v11","title":"Mapbox Maps SDK for iOS Migration Guide","type":"article"},{"title":"MapView","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapview\/init(frame:mapinitoptions:)","title":"init(frame: CGRect, mapInitOptions: MapInitOptions)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapview\/init(frame:mapinitoptions:urlopener:)","title":"init(frame: CGRect, mapInitOptions: MapInitOptions, urlOpener: AttributionURLOpener)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/anchor","title":"var anchor: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/annotations","title":"var annotations: AnnotationOrchestrator!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/camera","title":"var camera: CameraAnimationsManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/camerastate","title":"var cameraState: CameraState","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/gestures","title":"var gestures: GestureManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/isopaque","title":"var isOpaque: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/location","title":"var location: LocationManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/mapboxmap","title":"var mapboxMap: MapboxMap!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/ornaments","title":"var ornaments: OrnamentsManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/preferredframeraterange","title":"var preferredFrameRateRange: CAFrameRateRange","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/preferredframespersecond","title":"var preferredFramesPerSecond: Int","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/presentswithtransaction","title":"var presentsWithTransaction: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/viewannotations","title":"var viewAnnotations: ViewAnnotationManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/viewport","title":"var viewport: ViewportManager!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapview\/didmovetowindow()","title":"func didMoveToWindow()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapview","title":"MapView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/init(mapoptions:cameraoptions:styleuri:stylejson:)","title":"init(mapOptions: MapOptions, cameraOptions: CameraOptions?, styleURI: StyleURI?, styleJSON: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/cameraoptions","title":"let cameraOptions: CameraOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/mapoptions","title":"let mapOptions: MapOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/stylejson","title":"let styleJSON: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/styleuri","title":"let styleURI: StyleURI?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapinitoptions","title":"MapInitOptions","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptionsprovider\/mapinitoptions()","title":"func mapInitOptions() -> MapInitOptions","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapinitoptionsprovider","title":"MapInitOptionsProvider","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/init(constrainmode:viewportmode:orientation:crosssourcecollisions:optimizeforterrain:size:pixelratio:glyphsrasterizationoptions:)","title":"init(constrainMode: ConstrainMode, viewportMode: ViewportMode, orientation: NorthOrientation, crossSourceCollisions: Bool, optimizeForTerrain: Bool, size: CGSize?, pixelRatio: CGFloat, glyphsRasterizationOptions: GlyphsRasterizationOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/crosssourcecollisions","title":"var crossSourceCollisions: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/glyphsrasterizationoptions","title":"var glyphsRasterizationOptions: GlyphsRasterizationOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/optimizeforterrain","title":"var optimizeForTerrain: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/pixelratio","title":"var pixelRatio: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/size","title":"var size: CGSize?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapoptions","title":"MapOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/init(rasterizationmode:fontfamilies:)","title":"init(rasterizationMode: GlyphsRasterizationMode, fontFamilies: [String])","type":"init"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/init(rasterizationmode:fontfamily:)","title":"init(rasterizationMode: GlyphsRasterizationMode, fontFamily: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/fontfamily","title":"var fontFamily: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/rasterizationmode","title":"var rasterizationMode: GlyphsRasterizationMode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions","title":"GlyphsRasterizationOptions","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionurlopener\/openattributionurl(_:)","title":"func openAttributionURL(URL)","type":"method"}],"path":"\/documentation\/mapboxmaps\/attributionurlopener","title":"AttributionURLOpener","type":"protocol"},{"title":"Snapshotter","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/init(options:)","title":"init(options: MapSnapshotOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/camerastate","title":"var cameraState: CameraState","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onmaploadingerror","title":"var onMapLoadingError: Signal<MapLoadingError>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onstyledataloaded","title":"var onStyleDataLoaded: Signal<StyleDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onstyleimagemissing","title":"var onStyleImageMissing: Signal<StyleImageMissing>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onstyleloaded","title":"var onStyleLoaded: Signal<StyleLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshotsize","title":"var snapshotSize: CGSize","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/style","title":"var style: StyleManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/camera(for:padding:bearing:pitch:)","title":"func camera(for: [CLLocationCoordinate2D], padding: UIEdgeInsets?, bearing: Double?, pitch: Double?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/cleardata(completion:)","title":"func clearData(completion: (Error?) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/coordinatebounds(for:)","title":"func coordinateBounds(for: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onevery(event:handler:)","title":"func onEvery<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onnext(event:handler:)","title":"func onNext<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/setcamera(to:)","title":"func setCamera(to: CameraOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/start(overlayhandler:completion:)","title":"func start(overlayHandler: SnapshotOverlayHandler?, completion: (Result<UIImage, SnapshotError>) -> Void)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/snapshotfailed(reason:)","title":"case snapshotFailed(reason: String?)","type":"case"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror","title":"Snapshotter.SnapshotError","type":"enum"}],"path":"\/documentation\/mapboxmaps\/snapshotter","title":"Snapshotter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.struct\/init(size:pixelratio:glyphsrasterizationoptions:showslogo:showsattribution:)","title":"init(size: CGSize, pixelRatio: CGFloat, glyphsRasterizationOptions: GlyphsRasterizationOptions, showsLogo: Bool, showsAttribution: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.struct\/glyphsrasterizationoptions-86ude","title":"var glyphsRasterizationOptions: GlyphsRasterizationOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.struct\/pixelratio-iz82","title":"var pixelRatio: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.struct\/showsattribution","title":"var showsAttribution: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.struct\/showslogo","title":"var showsLogo: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.struct\/size","title":"var size: CGSize","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.struct","title":"MapSnapshotOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/context","title":"var context: CGContext","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/coordinateforpoint","title":"var coordinateForPoint: ((CGPoint) -> CLLocationCoordinate2D)","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/pointforcoordinate","title":"var pointForCoordinate: ((CLLocationCoordinate2D) -> CGPoint)","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/scale","title":"var scale: CGFloat","type":"property"}],"path":"\/documentation\/mapboxmaps\/snapshotoverlay","title":"SnapshotOverlay","type":"struct"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlayhandler","title":"SnapshotOverlayHandler","type":"typealias"},{"title":"MapboxMap","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camerabounds","title":"var cameraBounds: CameraBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camerastate","title":"var cameraState: CameraState","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/debugoptions","title":"var debugOptions: [MapDebugOptions]","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/freecameraoptions","title":"var freeCameraOptions: FreeCameraOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/oncamerachanged","title":"var onCameraChanged: Signal<CameraChanged>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmapidle","title":"var onMapIdle: Signal<MapIdle>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmaploaded","title":"var onMapLoaded: Signal<MapLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmaploadingerror","title":"var onMapLoadingError: Signal<MapLoadingError>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onrenderframefinished","title":"var onRenderFrameFinished: Signal<RenderFrameFinished>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onrenderframestarted","title":"var onRenderFrameStarted: Signal<RenderFrameStarted>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onresourcerequest","title":"var onResourceRequest: Signal<ResourceRequest>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourceadded","title":"var onSourceAdded: Signal<SourceAdded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourcedataloaded","title":"var onSourceDataLoaded: Signal<SourceDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourceremoved","title":"var onSourceRemoved: Signal<SourceRemoved>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyledataloaded","title":"var onStyleDataLoaded: Signal<StyleDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleimagemissing","title":"var onStyleImageMissing: Signal<StyleImageMissing>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleimageremoveunused","title":"var onStyleImageRemoveUnused: Signal<StyleImageRemoveUnused>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleloaded","title":"var onStyleLoaded: Signal<StyleLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/options","title":"var options: MapOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/prefetchzoomdelta","title":"var prefetchZoomDelta: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/shouldrenderworldcopies","title":"var shouldRenderWorldCopies: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/style","title":"var style: StyleManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/beginanimation()","title":"func beginAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/begingesture()","title":"func beginGesture()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:camera:rect:)","title":"func camera(for: [CLLocationCoordinate2D], camera: CameraOptions, rect: CGRect) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:padding:bearing:pitch:)-1il0f","title":"func camera(for: Geometry, padding: UIEdgeInsets, bearing: CGFloat?, pitch: CGFloat?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:padding:bearing:pitch:)-5juqy","title":"func camera(for: [CLLocationCoordinate2D], padding: UIEdgeInsets?, bearing: Double?, pitch: Double?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:padding:bearing:pitch:maxzoom:offset:)","title":"func camera(for: CoordinateBounds, padding: UIEdgeInsets, bearing: Double?, pitch: Double?, maxZoom: Double?, offset: CGPoint?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinate(for:)","title":"func coordinate(for: CGPoint) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinatebounds(for:)-54bmw","title":"func coordinateBounds(for: CGRect) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinatebounds(for:)-gs8h","title":"func coordinateBounds(for: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinateboundsunwrapped(for:)","title":"func coordinateBoundsUnwrapped(for: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinateboundszoom(for:)","title":"func coordinateBoundsZoom(for: CameraOptions) -> CoordinateBoundsZoom","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinateboundszoomunwrapped(for:)","title":"func coordinateBoundsZoomUnwrapped(for: CameraOptions) -> CoordinateBoundsZoom","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinates(for:)","title":"func coordinates(for: [CGPoint]) -> [CLLocationCoordinate2D]","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/dragcameraoptions(from:to:)","title":"func dragCameraOptions(from: CGPoint, to: CGPoint) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/dragend()","title":"func dragEnd()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/dragstart(for:)","title":"func dragStart(for: CGPoint)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/elevation(at:)","title":"func elevation(at: CLLocationCoordinate2D) -> Double?","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/endanimation()","title":"func endAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/endgesture()","title":"func endGesture()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getfeaturestate(sourceid:sourcelayerid:featureid:callback:)","title":"func getFeatureState(sourceId: String, sourceLayerId: String?, featureId: String, callback: (Result<[String : Any], Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstyle(_:transition:completion:)-5igce","title":"func loadStyle(StyleURI, transition: TransitionOptions?, completion: ((MapLoadingError?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstyle(_:transition:completion:)-7w69x","title":"func loadStyle(String, transition: TransitionOptions?, completion: ((MapLoadingError?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstylejson(_:completion:)","title":"func loadStyleJSON(String, completion: ((MapLoadingError?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstyleuri(_:completion:)","title":"func loadStyleURI(StyleURI, completion: ((MapLoadingError?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onevery(event:handler:)","title":"func onEvery<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onnext(event:handler:)","title":"func onNext<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/point(for:)","title":"func point(for: CLLocationCoordinate2D) -> CGPoint","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/points(for:)","title":"func points(for: [CLLocationCoordinate2D]) -> [CGPoint]","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/rect(for:)","title":"func rect(for: CoordinateBounds) -> CGRect","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/removefeaturestate(sourceid:sourcelayerid:featureid:statekey:callback:)","title":"func removeFeatureState(sourceId: String, sourceLayerId: String?, featureId: String, stateKey: String?, callback: (Result<NSNull, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/resetfeaturestates(sourceid:sourcelayerid:callback:)","title":"func resetFeatureStates(sourceId: String, sourceLayerId: String?, callback: (Result<NSNull, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setcamera(to:)","title":"func setCamera(to: CameraOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setcamerabounds(with:)","title":"func setCameraBounds(with: CameraBoundsOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setfeaturestate(sourceid:sourcelayerid:featureid:state:callback:)","title":"func setFeatureState(sourceId: String, sourceLayerId: String?, featureId: String, state: [String : Any], callback: (Result<NSNull, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/settilecachebudget(_:)","title":"func setTileCacheBudget(TileCacheBudget?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/triggerrepaint()","title":"func triggerRepaint()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/cleardata(completion:)","title":"static func clearData(completion: (Error?) -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterchildren(forsourceid:feature:completion:)","title":"func getGeoJsonClusterChildren(forSourceId: String, feature: Feature, completion: (Result<FeatureExtensionValue, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterexpansionzoom(forsourceid:feature:completion:)","title":"func getGeoJsonClusterExpansionZoom(forSourceId: String, feature: Feature, completion: (Result<FeatureExtensionValue, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterleaves(forsourceid:feature:limit:offset:completion:)","title":"func getGeoJsonClusterLeaves(forSourceId: String, feature: Feature, limit: UInt64, offset: UInt64, completion: (Result<FeatureExtensionValue, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/queryrenderedfeatures(with:options:completion:)-2qoxs","title":"func queryRenderedFeatures(with: [CGPoint], options: RenderedQueryOptions?, completion: (Result<[QueriedRenderedFeature], Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/queryrenderedfeatures(with:options:completion:)-5p9gh","title":"func queryRenderedFeatures(with: CGRect, options: RenderedQueryOptions?, completion: (Result<[QueriedRenderedFeature], Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/queryrenderedfeatures(with:options:completion:)-8iu3i","title":"func queryRenderedFeatures(with: CGPoint, options: RenderedQueryOptions?, completion: (Result<[QueriedRenderedFeature], Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/querysourcefeatures(for:options:completion:)","title":"func querySourceFeatures(for: String, options: SourceQueryOptions, completion: (Result<[QueriedSourceFeature], Error>) -> Void) -> Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapboxmap\/mapfeaturequeryable-implementations","title":"MapFeatureQueryable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapboxmap","title":"MapboxMap","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/init(center:padding:zoom:bearing:pitch:)-4x6oq","title":"init(center: CLLocationCoordinate2D, padding: UIEdgeInsets, zoom: CGFloat, bearing: CLLocationDirection, pitch: CGFloat)","type":"init"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/bearing-7ve2s","title":"var bearing: CLLocationDirection","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/center-9ysm5","title":"var center: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/padding-9uydc","title":"var padding: UIEdgeInsets","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/pitch-622xy","title":"var pitch: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/zoom-rzaa","title":"var zoom: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/camerastate-swift.struct","title":"CameraState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/init(camerastate:anchor:)","title":"init(cameraState: CameraState, anchor: CGPoint?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/init(center:padding:anchor:zoom:bearing:pitch:)","title":"init(center: CLLocationCoordinate2D?, padding: UIEdgeInsets?, anchor: CGPoint?, zoom: CGFloat?, bearing: CLLocationDirection?, pitch: CGFloat?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/anchor","title":"var anchor: CGPoint?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/bearing","title":"var bearing: CLLocationDirection?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/center","title":"var center: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/padding","title":"var padding: UIEdgeInsets?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/pitch","title":"var pitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/zoom","title":"var zoom: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct","title":"CameraOptions","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/==(_:_:)","title":"static func == (CameraBounds, CameraBounds) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/bounds-6ompi","title":"let bounds: CoordinateBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/maxpitch-9lf2d","title":"let maxPitch: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/maxzoom-3l9pw","title":"let maxZoom: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/minpitch-29sdr","title":"let minPitch: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/minzoom-704e2","title":"let minZoom: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/camerabounds-swift.struct","title":"CameraBounds","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/==(_:_:)","title":"static func == (CameraBoundsOptions, CameraBoundsOptions) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/init(bounds:maxzoom:minzoom:maxpitch:minpitch:)","title":"init(bounds: CoordinateBounds?, maxZoom: CGFloat?, minZoom: CGFloat?, maxPitch: CGFloat?, minPitch: CGFloat?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/init(camerabounds:)","title":"init(cameraBounds: CameraBounds)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/bounds-h954","title":"var bounds: CoordinateBounds?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/maxpitch","title":"var maxPitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/maxzoom","title":"var maxZoom: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/minpitch","title":"var minPitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/minzoom","title":"var minZoom: CGFloat?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.struct","title":"CameraBoundsOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/init(southwest:northeast:)","title":"init(southwest: CLLocationCoordinate2D, northeast: CLLocationCoordinate2D)","type":"init"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/init(southwest:northeast:infinitebounds:)","title":"init(southwest: CLLocationCoordinate2D, northeast: CLLocationCoordinate2D, infiniteBounds: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/center","title":"var center: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/east","title":"var east: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/infinitebounds","title":"var infiniteBounds: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/latitudespan","title":"var latitudeSpan: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/longitudespan","title":"var longitudeSpan: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/north","title":"var north: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/northeast","title":"var northeast: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/northwest","title":"var northwest: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/south","title":"var south: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/southeast","title":"var southeast: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/southwest","title":"var southwest: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/west","title":"var west: CLLocationDegrees","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/constrain(forpoint:)","title":"func constrain(forPoint: CLLocationCoordinate2D) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/contains(forarea:wrappedcoordinates:)","title":"func contains(forArea: CoordinateBounds, wrappedCoordinates: Bool) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/contains(forpoint:wrappedcoordinates:)","title":"func contains(forPoint: CLLocationCoordinate2D, wrappedCoordinates: Bool) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","title":"func containsLatitude(forLatitude: Double) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/containslongitude(forlongitude:)","title":"func containsLongitude(forLongitude: Double) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/extend(forarea:)","title":"func extend(forArea: CoordinateBounds) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/extend(forpoint:)","title":"func extend(forPoint: CLLocationCoordinate2D) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/intersects(forarea:wrappedcoordinates:)","title":"func intersects(forArea: CoordinateBounds, wrappedCoordinates: Bool) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/coordinatebounds","title":"CoordinateBounds","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedqueryoptions\/init(layerids:filter:)","title":"init(layerIds: [String]?, filter: Expression?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedqueryoptions\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderedqueryoptions\/layerids","title":"var layerIds: [String]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/renderedqueryoptions","title":"RenderedQueryOptions","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/queriedfeature\/feature","title":"var feature: Feature","type":"property"},{"path":"\/documentation\/mapboxmaps\/queriedfeature\/source","title":"var source: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/queriedfeature\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/queriedfeature\/state","title":"var state: Any","type":"property"}],"path":"\/documentation\/mapboxmaps\/queriedfeature","title":"QueriedFeature","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureextensionvalue\/init(value:features:)","title":"init(value: Any?, features: [Feature]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureextensionvalue\/features","title":"var features: [Feature]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/featureextensionvalue\/value","title":"var value: Any?","type":"property"}],"path":"\/documentation\/mapboxmaps\/featureextensionvalue","title":"FeatureExtensionValue","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maperror\/errordescription-1uw55","title":"var errorDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/maperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maperror\/errordescription-5jx0u","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maperror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maperror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maperror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/maperror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/maperror","title":"MapError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/init(type:message:sourceid:tileid:timestamp:)","title":"init(type: MapLoadingErrorType, message: String, sourceId: String?, tileId: CanonicalTileID?, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/error","title":"var error: MapLoadingErrorType","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/payload","title":"var payload: MapLoadingError","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/sourceid","title":"var sourceId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/tileid","title":"var tileId: CanonicalTileID?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/timestamp","title":"var timestamp: Date","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/type","title":"var type: MapLoadingErrorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/maploadingerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/errordescription-6fpzx","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/errordescription-94r8x","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/maploadingerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/maploadingerror","title":"MapLoadingError","type":"class"},{"title":"Style","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/styleuri\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/rawvalue-swift.property","title":"let rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/rawvalue-swift.typealias","title":"StyleURI.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/dark","title":"static let dark: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/light","title":"static let light: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/outdoors","title":"static let outdoors: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/satellite","title":"static let satellite: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/satellitestreets","title":"static let satelliteStreets: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/standard","title":"static let standard: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/streets","title":"static let streets: StyleURI","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styleuri\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleuri\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleuri","title":"StyleURI","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerposition-swift.enum\/above(_:)","title":"case above(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/layerposition-swift.enum\/at(_:)","title":"case at(Int)","type":"case"},{"path":"\/documentation\/mapboxmaps\/layerposition-swift.enum\/below(_:)","title":"case below(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/layerposition-swift.enum\/default","title":"case `default`","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerposition-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/layerposition-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/layerposition-swift.enum","title":"LayerPosition","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions\/init(duration:delay:enableplacementtransitions:)","title":"init(duration: TimeInterval?, delay: TimeInterval?, enablePlacementTransitions: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions\/delay","title":"var delay: TimeInterval?","type":"property"},{"path":"\/documentation\/mapboxmaps\/transitionoptions\/duration","title":"var duration: TimeInterval?","type":"property"},{"path":"\/documentation\/mapboxmaps\/transitionoptions\/enableplacementtransitions","title":"var enablePlacementTransitions: Bool?","type":"property"}],"path":"\/documentation\/mapboxmaps\/transitionoptions","title":"TransitionOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/terrain\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/terrain\/init(sourceid:)","title":"init(sourceId: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/terrain\/exaggeration","title":"var exaggeration: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/terrain\/source","title":"var source: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/terrain","title":"Terrain","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapboxmaps\/layer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"title":"Layer Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/mapboxmaps\/source\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"title":"Source Implementations","type":"groupMarker"}],"path":"\/documentation\/mapboxmaps\/styledecodable\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/styledecodable","title":"StyleDecodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleencodable\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapboxmaps\/styleencodable\/jsonobject()-8gvle","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"title":"StyleEncodable Implementations","type":"groupMarker"}],"path":"\/documentation\/mapboxmaps\/styleencodable\/jsonobject()-4kl0g","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleencodable","title":"StyleEncodable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/errordescription-970m3","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleerror\/rawvalue-swift.property","title":"var rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/rawvalue-swift.typealias","title":"StyleError.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/errordescription-1n6u1","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleerror","title":"StyleError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/message","title":"let message: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/invalidobject","title":"static let invalidObject: TypeConversionError","type":"property"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/unexpectedtype","title":"static let unexpectedType: TypeConversionError","type":"property"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/unsuccessfulconversion","title":"static let unsuccessfulConversion: TypeConversionError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/typeconversionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/typeconversionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/typeconversionerror","title":"TypeConversionError","type":"struct"},{"title":"Sources","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/source\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/source\/type","title":"var type: SourceType","type":"property"}],"path":"\/documentation\/mapboxmaps\/source","title":"Source","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/rawvalue","title":"let rawValue: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/sourcetype","title":"var sourceType: Source.Type?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/geojson","title":"static let geoJson: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/image","title":"static let image: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/model","title":"static let model: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/raster","title":"static let raster: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/rasterdem","title":"static let rasterDem: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/vector","title":"static let vector: SourceType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/sourcetype","title":"SourceType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceinfo\/init(id:type:)","title":"init(id: String, type: SourceType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceinfo\/type","title":"var type: SourceType","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourceinfo","title":"SourceInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/buffer","title":"var buffer: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/cluster","title":"var cluster: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/clustermaxzoom","title":"var clusterMaxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/clusterproperties","title":"var clusterProperties: [String : Expression]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/clusterradius","title":"var clusterRadius: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/data","title":"var data: GeoJSONSourceData?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/generateid","title":"var generateId: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/linemetrics","title":"var lineMetrics: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/promoteid","title":"var promoteId: PromoteId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/tolerance","title":"var tolerance: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/type","title":"let type: SourceType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/geojsonsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/geojsonsource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/geojsonsource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geojsonsource","title":"GeoJSONSource","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/feature(_:)","title":"case feature(Feature)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/featurecollection(_:)","title":"case featureCollection(FeatureCollection)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/geometry(_:)","title":"case geometry(Geometry)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/url(_:)","title":"static func url(URL) -> GeoJSONSourceData","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.enum","title":"GeoJSONSourceData","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/imagesource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/coordinates","title":"var coordinates: [[Double]]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/url","title":"var url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagesource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/imagesource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/imagesource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagesource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/imagesource","title":"ImageSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/bounds","title":"var bounds: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/encoding","title":"var encoding: Encoding?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/minimumtileupdateinterval","title":"var minimumTileUpdateInterval: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/minzoom","title":"var minzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilenetworkrequestsdelay","title":"var tileNetworkRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilerequestsdelay","title":"var tileRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilesize","title":"var tileSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tiles","title":"var tiles: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/url","title":"var url: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/volatile","title":"var volatile: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource","title":"RasterDemSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/rastersource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/bounds","title":"var bounds: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/minimumtileupdateinterval","title":"var minimumTileUpdateInterval: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/minzoom","title":"var minzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/scheme","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilenetworkrequestsdelay","title":"var tileNetworkRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilerequestsdelay","title":"var tileRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilesize","title":"var tileSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tiles","title":"var tiles: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/url","title":"var url: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/volatile","title":"var volatile: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/rastersource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rastersource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rastersource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rastersource","title":"RasterSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/bounds","title":"var bounds: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/minimumtileupdateinterval","title":"var minimumTileUpdateInterval: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/minzoom","title":"var minzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/promoteid","title":"var promoteId: PromoteId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/scheme","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilenetworkrequestsdelay","title":"var tileNetworkRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilerequestsdelay","title":"var tileRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tiles","title":"var tiles: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/url","title":"var url: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/volatile","title":"var volatile: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/vectorsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/vectorsource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/vectorsource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/vectorsource","title":"VectorSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/init(fetchtilefunction:canceltilefunction:minzoom:maxzoom:tileoptions:)","title":"init(fetchTileFunction: FetchTileFunctionCallback, cancelTileFunction: CancelTileFunctionCallback, minZoom: UInt8, maxZoom: UInt8, tileOptions: TileOptions)","type":"init"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/init(fetchtilefunction:canceltilefunction:tileoptions:)","title":"init(fetchTileFunction: FetchTileFunctionCallback, cancelTileFunction: CancelTileFunctionCallback, tileOptions: TileOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/canceltilefunction","title":"var cancelTileFunction: CancelTileFunctionCallback","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/fetchtilefunction","title":"var fetchTileFunction: FetchTileFunctionCallback","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/maxzoom","title":"var maxZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/minzoom","title":"var minZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/tileoptions","title":"var tileOptions: TileOptions","type":"property"}],"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions","title":"CustomGeometrySourceOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/init(z:x:y:)","title":"init(z: UInt8, x: UInt32, y: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/x","title":"var x: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/y","title":"var y: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/z","title":"var z: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/isequal(to:)","title":"func isEqual(to: CanonicalTileID) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/canonicaltileid","title":"CanonicalTileID","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/object(_:)","title":"case object([String : String])","type":"case"},{"path":"\/documentation\/mapboxmaps\/promoteid\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/promoteid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/promoteid","title":"PromoteId","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/tms","title":"case tms","type":"case"},{"path":"\/documentation\/mapboxmaps\/scheme\/xyz","title":"case xyz","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/scheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/scheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/scheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/scheme","title":"Scheme","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/mapbox","title":"case mapbox","type":"case"},{"path":"\/documentation\/mapboxmaps\/encoding\/terrarium","title":"case terrarium","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/encoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/encoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/encoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/encoding","title":"Encoding","type":"enum"},{"title":"Layers","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/type","title":"var type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/visibility","title":"var visibility: Value<Visibility>","type":"property"}],"path":"\/documentation\/mapboxmaps\/layer","title":"Layer","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/layertype","title":"var layerType: Layer.Type?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/background","title":"static let background: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/circle","title":"static let circle: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/fill","title":"static let fill: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/fillextrusion","title":"static let fillExtrusion: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/heatmap","title":"static let heatmap: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/hillshade","title":"static let hillshade: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/line","title":"static let line: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/locationindicator","title":"static let locationIndicator: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/model","title":"static let model: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/raster","title":"static let raster: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/sky","title":"static let sky: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/symbol","title":"static let symbol: LayerType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/layertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/layertype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/layertype\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/layertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/layertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/layertype","title":"LayerType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerinfo\/init(id:type:)","title":"init(id: String, type: LayerType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/layerinfo\/type","title":"var type: LayerType","type":"property"}],"path":"\/documentation\/mapboxmaps\/layerinfo","title":"LayerInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolor","title":"var backgroundColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolortransition","title":"var backgroundColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundemissivestrength","title":"var backgroundEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundemissivestrengthtransition","title":"var backgroundEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundopacity","title":"var backgroundOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundopacitytransition","title":"var backgroundOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundpattern","title":"var backgroundPattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/backgroundlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/backgroundlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/backgroundlayer","title":"BackgroundLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleblur","title":"var circleBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleblurtransition","title":"var circleBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolor","title":"var circleColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolortransition","title":"var circleColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleemissivestrength","title":"var circleEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleemissivestrengthtransition","title":"var circleEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleopacity","title":"var circleOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleopacitytransition","title":"var circleOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchalignment","title":"var circlePitchAlignment: Value<CirclePitchAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchscale","title":"var circlePitchScale: Value<CirclePitchScale>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleradius","title":"var circleRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleradiustransition","title":"var circleRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlesortkey","title":"var circleSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolor","title":"var circleStrokeColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolortransition","title":"var circleStrokeColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokeopacity","title":"var circleStrokeOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokeopacitytransition","title":"var circleStrokeOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokewidth","title":"var circleStrokeWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokewidthtransition","title":"var circleStrokeWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslate","title":"var circleTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslateanchor","title":"var circleTranslateAnchor: Value<CircleTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslatetransition","title":"var circleTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/circlelayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/circlelayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circlelayer","title":"CircleLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundattenuation","title":"var fillExtrusionAmbientOcclusionGroundAttenuation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundattenuationtransition","title":"var fillExtrusionAmbientOcclusionGroundAttenuationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundradius","title":"var fillExtrusionAmbientOcclusionGroundRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundradiustransition","title":"var fillExtrusionAmbientOcclusionGroundRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionintensity","title":"var fillExtrusionAmbientOcclusionIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionintensitytransition","title":"var fillExtrusionAmbientOcclusionIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionradius","title":"var fillExtrusionAmbientOcclusionRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionradiustransition","title":"var fillExtrusionAmbientOcclusionRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionwallradius","title":"var fillExtrusionAmbientOcclusionWallRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionwallradiustransition","title":"var fillExtrusionAmbientOcclusionWallRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbase","title":"var fillExtrusionBase: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbasetransition","title":"var fillExtrusionBaseTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolor","title":"var fillExtrusionColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolortransition","title":"var fillExtrusionColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionedgeradius","title":"var fillExtrusionEdgeRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolor","title":"var fillExtrusionFloodLightColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolortransition","title":"var fillExtrusionFloodLightColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundattenuation","title":"var fillExtrusionFloodLightGroundAttenuation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundattenuationtransition","title":"var fillExtrusionFloodLightGroundAttenuationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundradius","title":"var fillExtrusionFloodLightGroundRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundradiustransition","title":"var fillExtrusionFloodLightGroundRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightintensity","title":"var fillExtrusionFloodLightIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightintensitytransition","title":"var fillExtrusionFloodLightIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightwallradius","title":"var fillExtrusionFloodLightWallRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightwallradiustransition","title":"var fillExtrusionFloodLightWallRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheight","title":"var fillExtrusionHeight: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheighttransition","title":"var fillExtrusionHeightTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionopacity","title":"var fillExtrusionOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionopacitytransition","title":"var fillExtrusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionpattern","title":"var fillExtrusionPattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionroundedroof","title":"var fillExtrusionRoundedRoof: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslate","title":"var fillExtrusionTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslateanchor","title":"var fillExtrusionTranslateAnchor: Value<FillExtrusionTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslatetransition","title":"var fillExtrusionTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalgradient","title":"var fillExtrusionVerticalGradient: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalscale","title":"var fillExtrusionVerticalScale: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalscaletransition","title":"var fillExtrusionVerticalScaleTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/fillextrusionlayer","title":"FillExtrusionLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/filllayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillantialias","title":"var fillAntialias: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolor","title":"var fillColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolortransition","title":"var fillColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillemissivestrength","title":"var fillEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillemissivestrengthtransition","title":"var fillEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillopacity","title":"var fillOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillopacitytransition","title":"var fillOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolor","title":"var fillOutlineColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolortransition","title":"var fillOutlineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillpattern","title":"var fillPattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillsortkey","title":"var fillSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslate","title":"var fillTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslateanchor","title":"var fillTranslateAnchor: Value<FillTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslatetransition","title":"var fillTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/filllayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/filllayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/filllayer","title":"FillLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapcolor","title":"var heatmapColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapintensity","title":"var heatmapIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapintensitytransition","title":"var heatmapIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapopacity","title":"var heatmapOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapopacitytransition","title":"var heatmapOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapradius","title":"var heatmapRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapradiustransition","title":"var heatmapRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapweight","title":"var heatmapWeight: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/heatmaplayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/heatmaplayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/heatmaplayer","title":"HeatmapLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolor","title":"var hillshadeAccentColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolortransition","title":"var hillshadeAccentColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeexaggeration","title":"var hillshadeExaggeration: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeexaggerationtransition","title":"var hillshadeExaggerationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolor","title":"var hillshadeHighlightColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolortransition","title":"var hillshadeHighlightColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationanchor","title":"var hillshadeIlluminationAnchor: Value<HillshadeIlluminationAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationdirection","title":"var hillshadeIlluminationDirection: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolor","title":"var hillshadeShadowColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolortransition","title":"var hillshadeShadowColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/hillshadelayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/hillshadelayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/hillshadelayer","title":"HillshadeLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/linelayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineblur","title":"var lineBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineblurtransition","title":"var lineBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolor","title":"var lineBorderColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolortransition","title":"var lineBorderColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineborderwidth","title":"var lineBorderWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineborderwidthtransition","title":"var lineBorderWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecap","title":"var lineCap: Value<LineCap>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolor","title":"var lineColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolortransition","title":"var lineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedasharray","title":"var lineDasharray: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedepthocclusionfactor","title":"var lineDepthOcclusionFactor: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedepthocclusionfactortransition","title":"var lineDepthOcclusionFactorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineemissivestrength","title":"var lineEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineemissivestrengthtransition","title":"var lineEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegapwidth","title":"var lineGapWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegapwidthtransition","title":"var lineGapWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegradient","title":"var lineGradient: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linejoin","title":"var lineJoin: Value<LineJoin>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linemiterlimit","title":"var lineMiterLimit: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineoffset","title":"var lineOffset: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineoffsettransition","title":"var lineOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineopacity","title":"var lineOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineopacitytransition","title":"var lineOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linepattern","title":"var linePattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineroundlimit","title":"var lineRoundLimit: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linesortkey","title":"var lineSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslate","title":"var lineTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslateanchor","title":"var lineTranslateAnchor: Value<LineTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslatetransition","title":"var lineTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimoffset","title":"var lineTrimOffset: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidth","title":"var lineWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidthtransition","title":"var lineWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/linelayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/linelayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linelayer","title":"LineLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradius","title":"var accuracyRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolor","title":"var accuracyRadiusBorderColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolortransition","title":"var accuracyRadiusBorderColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolor","title":"var accuracyRadiusColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolortransition","title":"var accuracyRadiusColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiustransition","title":"var accuracyRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearing","title":"var bearing: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimage","title":"var bearingImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimagesize","title":"var bearingImageSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimagesizetransition","title":"var bearingImageSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingtransition","title":"var bearingTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolor","title":"var emphasisCircleColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolortransition","title":"var emphasisCircleColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleradius","title":"var emphasisCircleRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleradiustransition","title":"var emphasisCircleRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/imagepitchdisplacement","title":"var imagePitchDisplacement: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/location","title":"var location: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationindicatoropacity","title":"var locationIndicatorOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationindicatoropacitytransition","title":"var locationIndicatorOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationtransition","title":"var locationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/perspectivecompensation","title":"var perspectiveCompensation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimage","title":"var shadowImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimagesize","title":"var shadowImageSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimagesizetransition","title":"var shadowImageSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimage","title":"var topImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimagesize","title":"var topImageSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimagesizetransition","title":"var topImageSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/locationindicatorlayer","title":"LocationIndicatorLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmax","title":"var rasterBrightnessMax: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmaxtransition","title":"var rasterBrightnessMaxTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmin","title":"var rasterBrightnessMin: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmintransition","title":"var rasterBrightnessMinTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolor","title":"var rasterColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolormix","title":"var rasterColorMix: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolormixtransition","title":"var rasterColorMixTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorrange","title":"var rasterColorRange: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorrangetransition","title":"var rasterColorRangeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercontrast","title":"var rasterContrast: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercontrasttransition","title":"var rasterContrastTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterfadeduration","title":"var rasterFadeDuration: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterhuerotate","title":"var rasterHueRotate: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterhuerotatetransition","title":"var rasterHueRotateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteropacity","title":"var rasterOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteropacitytransition","title":"var rasterOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterresampling","title":"var rasterResampling: Value<RasterResampling>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastersaturation","title":"var rasterSaturation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastersaturationtransition","title":"var rasterSaturationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rasterlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterlayer","title":"RasterLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/skylayer\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherecolor","title":"var skyAtmosphereColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherehalocolor","title":"var skyAtmosphereHaloColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresun","title":"var skyAtmosphereSun: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresunintensity","title":"var skyAtmosphereSunIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradient","title":"var skyGradient: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientcenter","title":"var skyGradientCenter: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientradius","title":"var skyGradientRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyopacity","title":"var skyOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyopacitytransition","title":"var skyOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skytype","title":"var skyType: Value<SkyType>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/skylayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/skylayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/skylayer","title":"SkyLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconallowoverlap","title":"var iconAllowOverlap: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconanchor","title":"var iconAnchor: Value<IconAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolor","title":"var iconColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolortransition","title":"var iconColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconemissivestrength","title":"var iconEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconemissivestrengthtransition","title":"var iconEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhaloblur","title":"var iconHaloBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhaloblurtransition","title":"var iconHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolor","title":"var iconHaloColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolortransition","title":"var iconHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalowidth","title":"var iconHaloWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalowidthtransition","title":"var iconHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconignoreplacement","title":"var iconIgnorePlacement: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimage","title":"var iconImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimagecrossfade","title":"var iconImageCrossFade: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimagecrossfadetransition","title":"var iconImageCrossFadeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconkeepupright","title":"var iconKeepUpright: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoffset","title":"var iconOffset: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconopacity","title":"var iconOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconopacitytransition","title":"var iconOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoptional","title":"var iconOptional: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpadding","title":"var iconPadding: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpitchalignment","title":"var iconPitchAlignment: Value<IconPitchAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotate","title":"var iconRotate: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotationalignment","title":"var iconRotationAlignment: Value<IconRotationAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconsize","title":"var iconSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfit","title":"var iconTextFit: Value<IconTextFit>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfitpadding","title":"var iconTextFitPadding: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslate","title":"var iconTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslateanchor","title":"var iconTranslateAnchor: Value<IconTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslatetransition","title":"var iconTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolavoidedges","title":"var symbolAvoidEdges: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolplacement","title":"var symbolPlacement: Value<SymbolPlacement>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolsortkey","title":"var symbolSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolspacing","title":"var symbolSpacing: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzorder","title":"var symbolZOrder: Value<SymbolZOrder>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textallowoverlap","title":"var textAllowOverlap: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textanchor","title":"var textAnchor: Value<TextAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolor","title":"var textColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolortransition","title":"var textColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textemissivestrength","title":"var textEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textemissivestrengthtransition","title":"var textEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfield","title":"var textField: Value<String>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfont","title":"var textFont: Value<[String]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthaloblur","title":"var textHaloBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthaloblurtransition","title":"var textHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolor","title":"var textHaloColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolortransition","title":"var textHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalowidth","title":"var textHaloWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalowidthtransition","title":"var textHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textignoreplacement","title":"var textIgnorePlacement: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textjustify","title":"var textJustify: Value<TextJustify>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textkeepupright","title":"var textKeepUpright: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textletterspacing","title":"var textLetterSpacing: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textlineheight","title":"var textLineHeight: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxangle","title":"var textMaxAngle: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxwidth","title":"var textMaxWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoffset","title":"var textOffset: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textopacity","title":"var textOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textopacitytransition","title":"var textOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoptional","title":"var textOptional: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpadding","title":"var textPadding: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpitchalignment","title":"var textPitchAlignment: Value<TextPitchAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textradialoffset","title":"var textRadialOffset: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotate","title":"var textRotate: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotationalignment","title":"var textRotationAlignment: Value<TextRotationAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textsize","title":"var textSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttransform","title":"var textTransform: Value<TextTransform>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslate","title":"var textTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslateanchor","title":"var textTranslateAnchor: Value<TextTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslatetransition","title":"var textTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textvariableanchor","title":"var textVariableAnchor: Value<[TextAnchor]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textwritingmode","title":"var textWritingMode: Value<[TextWritingMode]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/symbollayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/symbollayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/symbollayer","title":"SymbolLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/filter","title":"var filter: Expression?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelambientocclusionintensity","title":"var modelAmbientOcclusionIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelambientocclusionintensitytransition","title":"var modelAmbientOcclusionIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcastshadows","title":"var modelCastShadows: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolor","title":"var modelColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolormixintensity","title":"var modelColorMixIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolormixintensitytransition","title":"var modelColorMixIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolortransition","title":"var modelColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelemissivestrength","title":"var modelEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelemissivestrengthtransition","title":"var modelEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelheightbasedemissivestrengthmultiplier","title":"var modelHeightBasedEmissiveStrengthMultiplier: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelheightbasedemissivestrengthmultipliertransition","title":"var modelHeightBasedEmissiveStrengthMultiplierTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelid","title":"var modelId: Value<String>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelopacity","title":"var modelOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelopacitytransition","title":"var modelOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelreceiveshadows","title":"var modelReceiveShadows: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelrotation","title":"var modelRotation: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelrotationtransition","title":"var modelRotationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelroughness","title":"var modelRoughness: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelroughnesstransition","title":"var modelRoughnessTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelscale","title":"var modelScale: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelscalemode","title":"var modelScaleMode: Value<ModelScaleMode>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelscaletransition","title":"var modelScaleTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modeltranslation","title":"var modelTranslation: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modeltranslationtransition","title":"var modelTranslationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modeltype","title":"var modelType: Value<ModelType>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/slot","title":"var slot: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/modellayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/modellayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/modellayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/modellayer","title":"ModelLayer","type":"struct"},{"title":"Layer Property Values","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/constant(_:)","title":"case constant(T)","type":"case"},{"path":"\/documentation\/mapboxmaps\/value\/expression(_:)","title":"case expression(Expression)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/value","title":"Value","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/anchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/anchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/anchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/anchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/anchor","title":"Anchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circlepitchalignment","title":"CirclePitchAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circlepitchscale\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/circlepitchscale\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circlepitchscale","title":"CirclePitchScale","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circletranslateanchor","title":"CircleTranslateAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor","title":"FillExtrusionTranslateAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/filltranslateanchor","title":"FillTranslateAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor","title":"HillshadeIlluminationAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/center","title":"case center","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/left","title":"case left","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/right","title":"case right","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/top","title":"case top","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/topright","title":"case topRight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/iconanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/iconanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/iconanchor","title":"IconAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/iconpitchalignment","title":"IconPitchAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/iconrotationalignment","title":"IconRotationAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/both","title":"case both","type":"case"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/height","title":"case height","type":"case"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/icontextfit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/icontextfit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/icontextfit","title":"IconTextFit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/icontranslateanchor","title":"IconTranslateAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/butt","title":"case butt","type":"case"},{"path":"\/documentation\/mapboxmaps\/linecap\/round","title":"case round","type":"case"},{"path":"\/documentation\/mapboxmaps\/linecap\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linecap\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linecap\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/linecap\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linecap","title":"LineCap","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/bevel","title":"case bevel","type":"case"},{"path":"\/documentation\/mapboxmaps\/linejoin\/miter","title":"case miter","type":"case"},{"path":"\/documentation\/mapboxmaps\/linejoin\/round","title":"case round","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linejoin\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linejoin\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/linejoin\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linejoin","title":"LineJoin","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linetranslateanchor","title":"LineTranslateAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/nearest","title":"case nearest","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/rasterresampling\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterresampling\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterresampling","title":"RasterResampling","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/data(_:)","title":"case data(ResolvedImageData)","type":"case"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/name(_:)","title":"case name(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/==(_:_:)","title":"static func == (ResolvedImage, ResolvedImage) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/resolvedimage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/resolvedimage","title":"ResolvedImage","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/available","title":"var available: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/resolvedimagedata","title":"ResolvedImageData","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/atmosphere","title":"case atmosphere","type":"case"},{"path":"\/documentation\/mapboxmaps\/skytype\/gradient","title":"case gradient","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/skytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/skytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/skytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/skytype","title":"SkyType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/common3d","title":"case common3d","type":"case"},{"path":"\/documentation\/mapboxmaps\/modeltype\/locationindicator","title":"case locationIndicator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/modeltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/modeltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/modeltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/modeltype","title":"ModelType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(_:)","title":"init(UIColor)","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(red:green:blue:alpha:)","title":"init?(red: Double, green: Double, blue: Double, alpha: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/alpha","title":"let alpha: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/blue","title":"let blue: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/green","title":"let green: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/red","title":"let red: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/stylecolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/stylecolor","title":"StyleColor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/init(duration:delay:)","title":"init(duration: TimeInterval, delay: TimeInterval)","type":"init"},{"path":"\/documentation\/mapboxmaps\/styletransition\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/delay","title":"var delay: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/styletransition\/duration","title":"var duration: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/styletransition","title":"StyleTransition","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/line","title":"case line","type":"case"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/linecenter","title":"case lineCenter","type":"case"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/point","title":"case point","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/symbolplacement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/symbolplacement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/symbolplacement","title":"SymbolPlacement","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/source","title":"case source","type":"case"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/viewporty","title":"case viewportY","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/symbolzorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/symbolzorder\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/symbolzorder","title":"SymbolZOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/center","title":"case center","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/left","title":"case left","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/right","title":"case right","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/top","title":"case top","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/textanchor\/topright","title":"case topRight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textanchor","title":"TextAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mapboxmaps\/textjustify\/center","title":"case center","type":"case"},{"path":"\/documentation\/mapboxmaps\/textjustify\/left","title":"case left","type":"case"},{"path":"\/documentation\/mapboxmaps\/textjustify\/right","title":"case right","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textjustify\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textjustify\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textjustify\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textjustify","title":"TextJustify","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textpitchalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textpitchalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textpitchalignment","title":"TextPitchAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textrotationalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textrotationalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textrotationalignment","title":"TextRotationAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/lowercase","title":"case lowercase","type":"case"},{"path":"\/documentation\/mapboxmaps\/texttransform\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxmaps\/texttransform\/uppercase","title":"case uppercase","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/texttransform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/texttransform\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/texttransform\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/texttransform","title":"TextTransform","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/texttranslateanchor","title":"TextTranslateAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textwritingmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textwritingmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textwritingmode","title":"TextWritingMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxmaps\/visibility\/visible","title":"case visible","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/visibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/visibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/visibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/visibility","title":"Visibility","type":"enum"},{"title":"Expressions","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/abs","title":"static let abs: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/accumulated","title":"static let accumulated: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/acos","title":"static let acos: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/all","title":"static let all: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/any","title":"static let any: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/array","title":"static let array: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/asin","title":"static let asin: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/at","title":"static let at: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/atan","title":"static let atan: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/boolean","title":"static let boolean: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/ceil","title":"static let ceil: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/coalesce","title":"static let coalesce: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/collator","title":"static let collator: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/concat","title":"static let concat: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/config","title":"static let config: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/cos","title":"static let cos: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/cubicbezier","title":"static let cubicBezier: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/distance","title":"static let distance: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/distancefromcenter","title":"static let distanceFromCenter: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/division","title":"static let division: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/downcase","title":"static let downcase: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/e","title":"static let e: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/eq","title":"static let eq: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/exponential","title":"static let exponential: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/featurestate","title":"static let featureState: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/floor","title":"static let floor: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/format","title":"static let format: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/geometrytype","title":"static let geometryType: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/get","title":"static let get: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/gt","title":"static let gt: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/gte","title":"static let gte: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/has","title":"static let has: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/heatmapdensity","title":"static let heatmapDensity: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/hsl","title":"static let hsl: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/hsla","title":"static let hsla: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/id","title":"static let id: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/image","title":"static let image: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/inexpression","title":"static let inExpression: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/indexof","title":"static let indexOf: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/interpolate","title":"static let interpolate: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/issupportedscript","title":"static let isSupportedScript: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/length","title":"static let length: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/letexpression","title":"static let letExpression: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lineprogress","title":"static let lineProgress: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/linear","title":"static let linear: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/literal","title":"static let literal: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/ln","title":"static let ln: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/ln2","title":"static let ln2: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/log10","title":"static let log10: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/log2","title":"static let log2: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lt","title":"static let lt: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte","title":"static let lte: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/match","title":"static let match: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/max","title":"static let max: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/measurelight","title":"static let measureLight: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/min","title":"static let min: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/mod","title":"static let mod: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/neq","title":"static let neq: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/not","title":"static let not: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/number","title":"static let number: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/numberformat","title":"static let numberFormat: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/objectexpression","title":"static let objectExpression: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/pi","title":"static let pi: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/pitch","title":"static let pitch: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/pow","title":"static let pow: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/product","title":"static let product: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/properties","title":"static let properties: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/random","title":"static let random: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/rastervalue","title":"static let rasterValue: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/resolvedlocale","title":"static let resolvedLocale: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/rgb","title":"static let rgb: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/rgba","title":"static let rgba: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/round","title":"static let round: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/sin","title":"static let sin: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/skyradialprogress","title":"static let skyRadialProgress: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/slice","title":"static let slice: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/sqrt","title":"static let sqrt: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/step","title":"static let step: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/string","title":"static let string: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/subtract","title":"static let subtract: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/sum","title":"static let sum: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/switchcase","title":"static let switchCase: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/tan","title":"static let tan: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/toboolean","title":"static let toBoolean: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/tocolor","title":"static let toColor: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/tonumber","title":"static let toNumber: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/torgba","title":"static let toRgba: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/tostring","title":"static let toString: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/typeofexpression","title":"static let typeofExpression: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/upcase","title":"static let upcase: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/varexpression","title":"static let varExpression: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/within","title":"static let within: Expression.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/zoom","title":"static let zoom: Expression.Operator","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","title":"Expression.Operator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/init(_:)","title":"init(Operator)","type":"init"},{"path":"\/documentation\/mapboxmaps\/expression\/init(_:content:)","title":"init(Operator, content: () -> [Expression.Argument])","type":"init"},{"path":"\/documentation\/mapboxmaps\/expression\/init(arguments:)","title":"init(arguments: [Argument])","type":"init"},{"path":"\/documentation\/mapboxmaps\/expression\/init(content:)","title":"init(content: () -> [Expression.Argument])","type":"init"},{"path":"\/documentation\/mapboxmaps\/expression\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/expression\/init(operator:arguments:)","title":"init(operator: Operator, arguments: [Argument])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/arguments","title":"var arguments: [Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/expression\/operator-swift.property","title":"var `operator`: Operator","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/expression(_:)","title":"case expression(Expression)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/geojsonobject(_:)","title":"case geoJSONObject(GeoJSONObject)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/null","title":"case null","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/numberarray(_:)","title":"case numberArray([Double])","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/option(_:)","title":"case option(Option)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/stringarray(_:)","title":"case stringArray([String])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/argument\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/expression\/argument\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/expression\/argument","title":"Expression.Argument","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/element\/==(_:_:)","title":"static func == (Expression.Element, Expression.Element) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/element\/argument(_:)","title":"case argument(Argument)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/element\/operator(_:)","title":"case `operator`(Operator)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/element\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/element\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/element\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/element\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/expression\/element\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/expression\/element","title":"Expression.Element","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/option\/collator(_:)","title":"case collator(CollatorOptions)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/option\/format(_:)","title":"case format(FormatOptions)","type":"case"},{"path":"\/documentation\/mapboxmaps\/expression\/option\/numberformat(_:)","title":"case numberFormat(NumberFormatOptions)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/option\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/option\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/option\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/expression\/option\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/expression\/option","title":"Expression.Option","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/expression\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expression\/expressionarguments","title":"var expressionArguments: [Expression.Argument]","type":"property"}],"path":"\/documentation\/mapboxmaps\/expression\/expressionargumentconvertible-implementations","title":"ExpressionArgumentConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/expression","title":"Expression","type":"struct"},{"path":"\/documentation\/mapboxmaps\/exp","title":"Exp","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/init(fontscale:textfont:textcolor:)-18emn","title":"init(fontScale: Value<Double>?, textFont: Value<[String]>?, textColor: Value<StyleColor>?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/init(fontscale:textfont:textcolor:)-68yh3","title":"init(fontScale: Double?, textFont: [String]?, textColor: UIColor?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/expressionarguments","title":"var expressionArguments: [Expression.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/fontscale","title":"var fontScale: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/fontscalevalue","title":"var fontScaleValue: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/textcolor","title":"var textColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/textcolorvalue","title":"var textColorValue: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/textfont","title":"var textFont: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/textfontvalue","title":"var textFontValue: Value<[String]>?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/formatoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/formatoptions","title":"FormatOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/init(locale:currency:minfractiondigits:maxfractiondigits:)","title":"init(locale: String?, currency: String?, minFractionDigits: Int?, maxFractionDigits: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/currency","title":"var currency: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/expressionarguments","title":"var expressionArguments: [Expression.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/locale","title":"var locale: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/maxfractiondigits","title":"var maxFractionDigits: Int?","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/minfractiondigits","title":"var minFractionDigits: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/numberformatoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/numberformatoptions","title":"NumberFormatOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/init(casesensitive:diacriticsensitive:locale:)","title":"init(caseSensitive: Bool?, diacriticSensitive: Bool?, locale: String?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/casesensitive","title":"var caseSensitive: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/diacriticsensitive","title":"var diacriticSensitive: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/expressionarguments","title":"var expressionArguments: [Expression.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/locale","title":"var locale: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/collatoroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/collatoroptions","title":"CollatorOptions","type":"struct"},{"title":"Annotations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/annotationmanagersbyid","title":"var annotationManagersById: [String : AnnotationManager]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makecircleannotationmanager(id:layerposition:)","title":"func makeCircleAnnotationManager(id: String, layerPosition: LayerPosition?) -> CircleAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makepointannotationmanager(id:layerposition:clusteroptions:)","title":"func makePointAnnotationManager(id: String, layerPosition: LayerPosition?, clusterOptions: ClusterOptions?) -> PointAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makepolygonannotationmanager(id:layerposition:)","title":"func makePolygonAnnotationManager(id: String, layerPosition: LayerPosition?) -> PolygonAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makepolylineannotationmanager(id:layerposition:)","title":"func makePolylineAnnotationManager(id: String, layerPosition: LayerPosition?) -> PolylineAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/removeannotationmanager(withid:)","title":"func removeAnnotationManager(withId: String)","type":"method"}],"path":"\/documentation\/mapboxmaps\/annotationorchestrator","title":"AnnotationOrchestrator","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationinteractiondelegate\/annotationmanager(_:diddetecttappedannotations:)","title":"func annotationManager(AnnotationManager, didDetectTappedAnnotations: [Annotation])","type":"method"}],"path":"\/documentation\/mapboxmaps\/annotationinteractiondelegate","title":"AnnotationInteractionDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotation\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/annotation","title":"Annotation","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationmanager\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotationmanager\/layerid","title":"var layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotationmanager\/sourceid","title":"var sourceId: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/annotationmanager","title":"AnnotationManager","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/init(id:centercoordinate:isselected:isdraggable:)","title":"init(id: String, centerCoordinate: CLLocationCoordinate2D, isSelected: Bool, isDraggable: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/init(id:point:isselected:isdraggable:)","title":"init(id: String, point: Point, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleblur","title":"var circleBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolor","title":"var circleColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleopacity","title":"var circleOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleradius","title":"var circleRadius: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlesortkey","title":"var circleSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolor","title":"var circleStrokeColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokeopacity","title":"var circleStrokeOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokewidth","title":"var circleStrokeWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/point","title":"var point: Point","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/circleannotation","title":"CircleAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/annotations","title":"var annotations: [CircleAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleemissivestrength","title":"var circleEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlepitchalignment","title":"var circlePitchAlignment: CirclePitchAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlepitchscale","title":"var circlePitchScale: CirclePitchScale?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circletranslate","title":"var circleTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circletranslateanchor","title":"var circleTranslateAnchor: CircleTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/delegate","title":"var delegate: AnnotationInteractionDelegate?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/layerid","title":"let layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/sourceid","title":"let sourceId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/syncsourceandlayerifneeded()","title":"func syncSourceAndLayerIfNeeded()","type":"method"}],"path":"\/documentation\/mapboxmaps\/circleannotationmanager","title":"CircleAnnotationManager","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/init(image:name:)","title":"init(image: UIImage, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/image","title":"var image: UIImage","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct","title":"PointAnnotation.Image","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/init(id:coordinate:isselected:isdraggable:)","title":"init(id: String, coordinate: CLLocationCoordinate2D, isSelected: Bool, isDraggable: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/init(id:point:isselected:isdraggable:)","title":"init(id: String, point: Point, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconanchor","title":"var iconAnchor: IconAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolor","title":"var iconColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconemissivestrength","title":"var iconEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhaloblur","title":"var iconHaloBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolor","title":"var iconHaloColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalowidth","title":"var iconHaloWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimage","title":"var iconImage: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimagecrossfade","title":"var iconImageCrossFade: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconoffset","title":"var iconOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconopacity","title":"var iconOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconrotate","title":"var iconRotate: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconsize","title":"var iconSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/icontextfit","title":"var iconTextFit: IconTextFit?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/icontextfitpadding","title":"var iconTextFitPadding: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.property","title":"var image: Image?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/point","title":"var point: Point","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/symbolsortkey","title":"var symbolSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textanchor","title":"var textAnchor: TextAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolor","title":"var textColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textemissivestrength","title":"var textEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textfield","title":"var textField: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthaloblur","title":"var textHaloBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolor","title":"var textHaloColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalowidth","title":"var textHaloWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textjustify","title":"var textJustify: TextJustify?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textletterspacing","title":"var textLetterSpacing: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textlineheight","title":"var textLineHeight: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textmaxwidth","title":"var textMaxWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textoffset","title":"var textOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textopacity","title":"var textOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textradialoffset","title":"var textRadialOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textrotate","title":"var textRotate: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textsize","title":"var textSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texttransform","title":"var textTransform: TextTransform?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/pointannotation","title":"PointAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/annotations","title":"var annotations: [PointAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/delegate","title":"var delegate: AnnotationInteractionDelegate?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconallowoverlap","title":"var iconAllowOverlap: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconignoreplacement","title":"var iconIgnorePlacement: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconkeepupright","title":"var iconKeepUpright: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconoptional","title":"var iconOptional: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconpadding","title":"var iconPadding: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconpitchalignment","title":"var iconPitchAlignment: IconPitchAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconrotationalignment","title":"var iconRotationAlignment: IconRotationAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontextfit","title":"var iconTextFit: IconTextFit?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontextfitpadding","title":"var iconTextFitPadding: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontranslate","title":"var iconTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontranslateanchor","title":"var iconTranslateAnchor: IconTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/layerid","title":"let layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/sourceid","title":"let sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolavoidedges","title":"var symbolAvoidEdges: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolplacement","title":"var symbolPlacement: SymbolPlacement?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolspacing","title":"var symbolSpacing: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolzorder","title":"var symbolZOrder: SymbolZOrder?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textallowoverlap","title":"var textAllowOverlap: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textfont","title":"var textFont: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textignoreplacement","title":"var textIgnorePlacement: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textkeepupright","title":"var textKeepUpright: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textmaxangle","title":"var textMaxAngle: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textoptional","title":"var textOptional: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textpadding","title":"var textPadding: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textpitchalignment","title":"var textPitchAlignment: TextPitchAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textrotationalignment","title":"var textRotationAlignment: TextRotationAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texttranslate","title":"var textTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texttranslateanchor","title":"var textTranslateAnchor: TextTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textvariableanchor","title":"var textVariableAnchor: [TextAnchor]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textwritingmode","title":"var textWritingMode: [TextWritingMode]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/syncsourceandlayerifneeded()","title":"func syncSourceAndLayerIfNeeded()","type":"method"}],"path":"\/documentation\/mapboxmaps\/pointannotationmanager","title":"PointAnnotationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/init(id:polygon:isselected:isdraggable:)","title":"init(id: String, polygon: Polygon, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolor","title":"var fillColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillopacity","title":"var fillOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolor","title":"var fillOutlineColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillpattern","title":"var fillPattern: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillsortkey","title":"var fillSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/polygon","title":"var polygon: Polygon","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/polygonannotation","title":"PolygonAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/annotations","title":"var annotations: [PolygonAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/delegate","title":"var delegate: AnnotationInteractionDelegate?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillantialias","title":"var fillAntialias: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillemissivestrength","title":"var fillEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filltranslate","title":"var fillTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filltranslateanchor","title":"var fillTranslateAnchor: FillTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/layerid","title":"let layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/sourceid","title":"let sourceId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/syncsourceandlayerifneeded()","title":"func syncSourceAndLayerIfNeeded()","type":"method"}],"path":"\/documentation\/mapboxmaps\/polygonannotationmanager","title":"PolygonAnnotationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/init(id:linecoordinates:isselected:isdraggable:)","title":"init(id: String, lineCoordinates: [CLLocationCoordinate2D], isSelected: Bool, isDraggable: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/init(id:linestring:isselected:isdraggable:)","title":"init(id: String, lineString: LineString, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineblur","title":"var lineBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolor","title":"var lineBorderColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineborderwidth","title":"var lineBorderWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolor","title":"var lineColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linegapwidth","title":"var lineGapWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linejoin","title":"var lineJoin: LineJoin?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineoffset","title":"var lineOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineopacity","title":"var lineOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linepattern","title":"var linePattern: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linesortkey","title":"var lineSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linestring","title":"var lineString: LineString","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linewidth","title":"var lineWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/polylineannotation","title":"PolylineAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/annotations","title":"var annotations: [PolylineAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/delegate","title":"var delegate: AnnotationInteractionDelegate?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/layerid","title":"let layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linecap","title":"var lineCap: LineCap?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linedasharray","title":"var lineDasharray: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linedepthocclusionfactor","title":"var lineDepthOcclusionFactor: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineemissivestrength","title":"var lineEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linemiterlimit","title":"var lineMiterLimit: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineroundlimit","title":"var lineRoundLimit: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetranslate","title":"var lineTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetranslateanchor","title":"var lineTranslateAnchor: LineTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetrimoffset","title":"var lineTrimOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/sourceid","title":"let sourceId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/syncsourceandlayerifneeded()","title":"func syncSourceAndLayerIfNeeded()","type":"method"}],"path":"\/documentation\/mapboxmaps\/polylineannotationmanager","title":"PolylineAnnotationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/clusteroptions\/init(circleradius:circlecolor:textcolor:textsize:textfield:clusterradius:clustermaxzoom:clusterproperties:)","title":"init(circleRadius: Value<Double>, circleColor: Value<StyleColor>, textColor: Value<StyleColor>, textSize: Value<Double>, textField: Value<String>, clusterRadius: Double, clusterMaxZoom: Double, clusterProperties: [String : Expression]?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/clusteroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/clusteroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/clusteroptions","title":"ClusterOptions","type":"struct"},{"title":"View Annotations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/annotations","title":"var annotations: [UIView : ViewAnnotationOptions]","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/validatesviews","title":"var validatesViews: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/add(_:id:options:)","title":"func add(UIView, id: String?, options: ViewAnnotationOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/add(_:options:)","title":"func add(UIView, options: ViewAnnotationOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/addviewannotationupdateobserver(_:)","title":"func addViewAnnotationUpdateObserver(ViewAnnotationUpdateObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/camera(forannotations:padding:bearing:pitch:)","title":"func camera(forAnnotations: [String], padding: UIEdgeInsets, bearing: CGFloat?, pitch: CGFloat?) -> CameraOptions?","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/options(for:)","title":"func options(for: UIView) -> ViewAnnotationOptions?","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/options(forfeatureid:)","title":"func options(forFeatureId: String) -> ViewAnnotationOptions?","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/remove(_:)","title":"func remove(UIView)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/removeviewannotationupdateobserver(_:)","title":"func removeViewAnnotationUpdateObserver(ViewAnnotationUpdateObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/update(_:options:)","title":"func update(UIView, options: ViewAnnotationOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/view(forfeatureid:)","title":"func view(forFeatureId: String) -> UIView?","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/view(forid:)","title":"func view(forId: String) -> UIView?","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanager","title":"ViewAnnotationManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationupdateobserver\/framesdidchange(for:)","title":"func framesDidChange(for: [UIView])","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationupdateobserver\/visibilitydidchange(for:)","title":"func visibilityDidChange(for: [UIView])","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotationupdateobserver","title":"ViewAnnotationUpdateObserver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/init(geometry:width:height:associatedfeatureid:allowoverlap:visible:anchor:offsetx:offsety:selected:)","title":"init(geometry: GeometryConvertible?, width: CGFloat?, height: CGFloat?, associatedFeatureId: String?, allowOverlap: Bool?, visible: Bool?, anchor: ViewAnnotationAnchor?, offsetX: CGFloat?, offsetY: CGFloat?, selected: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/allowoverlap","title":"var allowOverlap: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/anchor","title":"var anchor: ViewAnnotationAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/associatedfeatureid","title":"var associatedFeatureId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/geometry","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/height","title":"var height: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/offsetx","title":"var offsetX: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/offsety","title":"var offsetY: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/selected","title":"var selected: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/visible","title":"var visible: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/width","title":"var width: CGFloat?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.struct","title":"ViewAnnotationOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/message","title":"let message: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/annotationnotfound","title":"static let annotationNotFound: ViewAnnotationManagerError","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/associatedfeatureidisalreadyinuse","title":"static let associatedFeatureIdIsAlreadyInUse: ViewAnnotationManagerError","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/geometryfieldmissing","title":"static let geometryFieldMissing: ViewAnnotationManagerError","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/viewisalreadyadded","title":"static let viewIsAlreadyAdded: ViewAnnotationManagerError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror","title":"ViewAnnotationManagerError","type":"struct"},{"title":"Camera Animations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/cameraanimators","title":"var cameraAnimators: [CameraAnimator]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/cancelanimations()","title":"func cancelAnimations()","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/ease(to:duration:curve:completion:)","title":"func ease(to: CameraOptions, duration: TimeInterval, curve: UIView.AnimationCurve, completion: AnimationCompletion?) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/fly(to:duration:completion:)","title":"func fly(to: CameraOptions, duration: TimeInterval?, completion: AnimationCompletion?) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:controlpoint1:controlpoint2:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, controlPoint1: CGPoint, controlPoint2: CGPoint, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:curve:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, curve: UIView.AnimationCurve, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:dampingratio:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, dampingRatio: CGFloat, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:timingparameters:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, timingParameters: UITimingCurveProvider, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"}],"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager","title":"CameraAnimationsManager","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/owner","title":"var owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/cameraanimator","title":"CameraAnimator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/fractioncomplete","title":"var fractionComplete: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/isreversed","title":"var isReversed: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/owner","title":"var owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/pausesoncompletion","title":"var pausesOnCompletion: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/transition","title":"var transition: CameraTransition?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/addcompletion(_:)","title":"func addCompletion(AnimationCompletion)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/continueanimation(withtimingparameters:durationfactor:)","title":"func continueAnimation(withTimingParameters: UITimingCurveProvider?, durationFactor: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/pauseanimation()","title":"func pauseAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/startanimation()","title":"func startAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/startanimation(afterdelay:)","title":"func startAnimation(afterDelay: TimeInterval)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/basiccameraanimator","title":"BasicCameraAnimator","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/fromvalue","title":"var fromValue: T","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/tovalue","title":"var toValue: T?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/change","title":"CameraTransition.Change","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/anchor","title":"var anchor: Change<CGPoint>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/bearing","title":"var bearing: Change<CLLocationDirection>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/center","title":"var center: Change<CLLocationCoordinate2D>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/padding","title":"var padding: Change<UIEdgeInsets>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/pitch","title":"var pitch: Change<CGFloat>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/shouldoptimizebearingpath","title":"var shouldOptimizeBearingPath: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/zoom","title":"var zoom: Change<CGFloat>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameratransition","title":"CameraTransition","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/duration","title":"let duration: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/owner","title":"let owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/flytocameraanimator","title":"FlyToCameraAnimator","type":"class"},{"path":"\/documentation\/mapboxmaps\/animationcompletion","title":"AnimationCompletion","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/rawvalue-swift.property","title":"let rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/rawvalue-swift.typealias","title":"AnimationOwner.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/gestures","title":"static let gestures: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/animationowner\/unspecified","title":"static let unspecified: AnimationOwner","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/animationowner\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/animationowner","title":"AnimationOwner","type":"struct"},{"title":"Ornaments","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/attributionbutton","title":"var attributionButton: UIView","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/compassview","title":"var compassView: UIView","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/logoview","title":"var logoView: UIView","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/options","title":"var options: OrnamentOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/scalebarview","title":"var scaleBarView: UIView","type":"property"}],"path":"\/documentation\/mapboxmaps\/ornamentsmanager","title":"OrnamentsManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/init(scalebar:compass:logo:attributionbutton:)","title":"init(scaleBar: ScaleBarViewOptions, compass: CompassViewOptions, logo: LogoViewOptions, attributionButton: AttributionButtonOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/attributionbutton","title":"var attributionButton: AttributionButtonOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/compass","title":"var compass: CompassViewOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/logo","title":"var logo: LogoViewOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/scalebar","title":"var scaleBar: ScaleBarViewOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/ornamentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ornamentoptions","title":"OrnamentOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/topright","title":"case topRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/toptrailing","title":"case topTrailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/ornamentposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/ornamentposition\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ornamentposition","title":"OrnamentPosition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/adaptive","title":"case adaptive","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/hidden","title":"case hidden","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/visible","title":"case visible","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ornamentvisibility","title":"OrnamentVisibility","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/init(position:margins:)","title":"init(position: OrnamentPosition, margins: CGPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions","title":"AttributionButtonOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/init(position:margins:image:visibility:)","title":"init(position: OrnamentPosition, margins: CGPoint, image: UIImage?, visibility: OrnamentVisibility)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/image","title":"var image: UIImage?","type":"property"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/visibility","title":"var visibility: OrnamentVisibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/compassviewoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/compassviewoptions","title":"CompassViewOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/init(position:margins:)","title":"init(position: OrnamentPosition, margins: CGPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/logoviewoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/logoviewoptions","title":"LogoViewOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/init(position:margins:visibility:usemetricunits:)","title":"init(position: OrnamentPosition, margins: CGPoint, visibility: OrnamentVisibility, useMetricUnits: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/usemetricunits","title":"var useMetricUnits: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/visibility","title":"var visibility: OrnamentVisibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/scalebarviewoptions","title":"ScaleBarViewOptions","type":"struct"},{"title":"Gestures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/delegate","title":"var delegate: GestureManagerDelegate?","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/doubletaptozoomingesturerecognizer","title":"var doubleTapToZoomInGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/doubletouchtozoomoutgesturerecognizer","title":"var doubleTouchToZoomOutGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/options","title":"var options: GestureOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/pangesturerecognizer","title":"var panGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/pinchgesturerecognizer","title":"var pinchGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/pitchgesturerecognizer","title":"var pitchGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/quickzoomgesturerecognizer","title":"var quickZoomGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/rotategesturerecognizer","title":"var rotateGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/singletapgesturerecognizer","title":"var singleTapGestureRecognizer: UIGestureRecognizer","type":"property"}],"path":"\/documentation\/mapboxmaps\/gesturemanager","title":"GestureManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/init(panenabled:pinchenabled:rotateenabled:simultaneousrotateandpinchzoomenabled:pinchzoomenabled:pinchpanenabled:pitchenabled:doubletaptozoominenabled:doubletouchtozoomoutenabled:quickzoomenabled:panmode:pandecelerationfactor:focalpoint:)","title":"init(panEnabled: Bool, pinchEnabled: Bool, rotateEnabled: Bool, simultaneousRotateAndPinchZoomEnabled: Bool, pinchZoomEnabled: Bool, pinchPanEnabled: Bool, pitchEnabled: Bool, doubleTapToZoomInEnabled: Bool, doubleTouchToZoomOutEnabled: Bool, quickZoomEnabled: Bool, panMode: PanMode, panDecelerationFactor: CGFloat, focalPoint: CGPoint?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/doubletaptozoominenabled","title":"var doubleTapToZoomInEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/doubletouchtozoomoutenabled","title":"var doubleTouchToZoomOutEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/focalpoint","title":"var focalPoint: CGPoint?","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pandecelerationfactor","title":"var panDecelerationFactor: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/panenabled","title":"var panEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/panmode","title":"var panMode: PanMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pinchenabled","title":"var pinchEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pinchpanenabled","title":"var pinchPanEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pinchzoomenabled","title":"var pinchZoomEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pitchenabled","title":"var pitchEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/quickzoomenabled","title":"var quickZoomEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/rotateenabled","title":"var rotateEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/simultaneousrotateandpinchzoomenabled","title":"var simultaneousRotateAndPinchZoomEnabled: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/gestureoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/gestureoptions","title":"GestureOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/mapboxmaps\/panmode\/horizontalandvertical","title":"case horizontalAndVertical","type":"case"},{"path":"\/documentation\/mapboxmaps\/panmode\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/panmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/panmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/panmode","title":"PanMode","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate\/gesturemanager(_:didbegin:)","title":"func gestureManager(GestureManager, didBegin: GestureType)","type":"method"},{"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate\/gesturemanager(_:didend:willanimate:)","title":"func gestureManager(GestureManager, didEnd: GestureType, willAnimate: Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate\/gesturemanager(_:didendanimatingfor:)","title":"func gestureManager(GestureManager, didEndAnimatingFor: GestureType)","type":"method"}],"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate","title":"GestureManagerDelegate","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/doubletaptozoomin","title":"case doubleTapToZoomIn","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/doubletouchtozoomout","title":"case doubleTouchToZoomOut","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/pinch","title":"case pinch","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/pitch","title":"case pitch","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/quickzoom","title":"case quickZoom","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/singletap","title":"case singleTap","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/gesturetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/gesturetype","title":"GestureType","type":"enum"},{"title":"Location","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/latestlocation","title":"var latestLocation: Location?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/onheadingchange","title":"var onHeadingChange: Signal<Heading>","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/onlocationchange","title":"var onLocationChange: Signal<[Location]>","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/onpuckrender","title":"let onPuckRender: Signal<PuckRenderingData>","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/options","title":"var options: LocationOptions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/override(locationprovider:headingprovider:)-79xkb","title":"func override(locationProvider: Signal<[Location]>, headingProvider: Signal<Heading>?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/override(locationprovider:headingprovider:)-8xcsf","title":"func override(locationProvider: LocationProvider, headingProvider: HeadingProvider?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/override(provider:)","title":"func override(provider: LocationProvider & HeadingProvider)","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationmanager","title":"LocationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/init(pucktype:puckbearing:puckbearingenabled:)","title":"init(puckType: PuckType?, puckBearing: PuckBearing, puckBearingEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/puckbearing","title":"var puckBearing: PuckBearing","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/puckbearingenabled","title":"var puckBearingEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/pucktype","title":"var puckType: PuckType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/locationoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/locationoptions","title":"LocationOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pucktype\/puck2d(_:)","title":"case puck2D(Puck2DConfiguration)","type":"case"},{"path":"\/documentation\/mapboxmaps\/pucktype\/puck3d(_:)","title":"case puck3D(Puck3DConfiguration)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pucktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/pucktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/pucktype","title":"PuckType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/init(color:radius:)","title":"init(color: UIColor, radius: Radius)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/color","title":"var color: UIColor","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.property","title":"var radius: Radius","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/default","title":"static let `default`: Puck2DConfiguration.Pulsing","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/accuracy","title":"case accuracy","type":"case"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/constant(_:)","title":"case constant(Double)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum","title":"Puck2DConfiguration.Pulsing.Radius","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct","title":"Puck2DConfiguration.Pulsing","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/init(topimage:bearingimage:shadowimage:scale:pulsing:showsaccuracyring:opacity:)","title":"init(topImage: UIImage?, bearingImage: UIImage?, shadowImage: UIImage?, scale: Value<Double>?, pulsing: Pulsing?, showsAccuracyRing: Bool, opacity: Double)","type":"init"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/init(topimage:bearingimage:shadowimage:scale:showsaccuracyring:accuracyringcolor:accuracyringbordercolor:opacity:)","title":"init(topImage: UIImage?, bearingImage: UIImage?, shadowImage: UIImage?, scale: Value<Double>?, showsAccuracyRing: Bool, accuracyRingColor: UIColor, accuracyRingBorderColor: UIColor, opacity: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/accuracyringbordercolor","title":"var accuracyRingBorderColor: UIColor","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/accuracyringcolor","title":"var accuracyRingColor: UIColor","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/bearingimage","title":"var bearingImage: UIImage?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/opacity","title":"var opacity: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.property","title":"var pulsing: Pulsing?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/scale","title":"var scale: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/shadowimage","title":"var shadowImage: UIImage?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/showsaccuracyring","title":"var showsAccuracyRing: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/topimage","title":"var topImage: UIImage?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/makedefault(showbearing:)","title":"static func makeDefault(showBearing: Bool) -> Puck2DConfiguration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration","title":"Puck2DConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/init(model:modelscale:modelrotation:modelopacity:)","title":"init(model: Model, modelScale: Value<[Double]>?, modelRotation: Value<[Double]>?, modelOpacity: Value<Double>?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/model","title":"var model: Model","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelopacity","title":"var modelOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelrotation","title":"var modelRotation: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelscale","title":"var modelScale: Value<[Double]>?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck3dconfiguration","title":"Puck3DConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/model\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/model\/init(uri:position:orientation:)","title":"init(uri: URL?, position: [Double]?, orientation: [Double]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/model\/orientation","title":"var orientation: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/model\/position","title":"var position: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/model\/uri","title":"var uri: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/model\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/model\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/model","title":"Model","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckbearing\/course","title":"case course","type":"case"},{"path":"\/documentation\/mapboxmaps\/puckbearing\/heading","title":"case heading","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckbearing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puckbearing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puckbearing","title":"PuckBearing","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationprovider\/addlocationobserver(for:)","title":"func addLocationObserver(for: LocationObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationprovider\/getlastobservedlocation()","title":"func getLastObservedLocation() -> Location?","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationprovider\/removelocationobserver(for:)","title":"func removeLocationObserver(for: LocationObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationprovider","title":"LocationProvider","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/init(distancefilter:desiredaccuracy:activitytype:)","title":"init(distanceFilter: CLLocationDistance, desiredAccuracy: CLLocationAccuracy, activityType: CLActivityType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/activitytype","title":"var activityType: CLActivityType","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/desiredaccuracy","title":"var desiredAccuracy: CLLocationAccuracy","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/distancefilter","title":"var distanceFilter: CLLocationDistance","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct","title":"AppleLocationProvider.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/delegate","title":"var delegate: AppleLocationProviderDelegate?","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/latestlocation","title":"var latestLocation: Location?","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/onheadingupdate","title":"var onHeadingUpdate: Signal<Heading>","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/onlocationupdate","title":"var onLocationUpdate: Signal<[Location]>","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.property","title":"var options: Options","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/requesttemporaryfullaccuracyauthorization(withpurposekey:)","title":"func requestTemporaryFullAccuracyAuthorization(withPurposeKey: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanager(_:didupdateheading:)","title":"func locationManager(CLLocationManager, didUpdateHeading: CLHeading)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanagerdidchangeauthorization(_:)","title":"func locationManagerDidChangeAuthorization(CLLocationManager)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanagershoulddisplayheadingcalibration(_:)","title":"func locationManagerShouldDisplayHeadingCalibration(CLLocationManager) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/cllocationmanagerdelegateproxydelegate-implementations","title":"CLLocationManagerDelegateProxyDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/latestheading","title":"var latestHeading: Heading?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/add(headingobserver:)","title":"func add(headingObserver: HeadingObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/remove(headingobserver:)","title":"func remove(headingObserver: HeadingObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/headingprovider-implementations","title":"HeadingProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/addlocationobserver(for:)","title":"func addLocationObserver(for: LocationObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/getlastobservedlocation()","title":"func getLastObservedLocation() -> Location?","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/removelocationobserver(for:)","title":"func removeLocationObserver(for: LocationObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationprovider-implementations","title":"LocationProvider Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider","title":"AppleLocationProvider","type":"class"},{"title":"Viewport","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/defaulttransition","title":"var defaultTransition: ViewportTransition","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/options","title":"var options: ViewportOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/status","title":"var status: ViewportStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/addstatusobserver(_:)","title":"func addStatusObserver(ViewportStatusObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/idle()","title":"func idle()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makedefaultviewporttransition(options:)","title":"func makeDefaultViewportTransition(options: DefaultViewportTransitionOptions) -> DefaultViewportTransition","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makefollowpuckviewportstate(options:)","title":"func makeFollowPuckViewportState(options: FollowPuckViewportStateOptions) -> FollowPuckViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makeimmediateviewporttransition()","title":"func makeImmediateViewportTransition() -> ImmediateViewportTransition","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makeoverviewviewportstate(options:)","title":"func makeOverviewViewportState(options: OverviewViewportStateOptions) -> OverviewViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/removestatusobserver(_:)","title":"func removeStatusObserver(ViewportStatusObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/transition(to:transition:completion:)","title":"func transition(to: ViewportState, transition: ViewportTransition?, completion: ((_ success: Bool) -> Void)?)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportmanager","title":"ViewportManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/init(transitionstoidleuponuserinteraction:)","title":"init(transitionsToIdleUponUserInteraction: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/transitionstoidleuponuserinteraction","title":"var transitionsToIdleUponUserInteraction: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportoptions","title":"ViewportOptions","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/==(_:_:)","title":"static func == (ViewportStatus, ViewportStatus) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/state(_:)","title":"case state(ViewportState)","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/transition(_:tostate:)","title":"case transition(ViewportTransition, toState: ViewportState)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportstatus","title":"ViewportStatus","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatusobserver\/viewportstatusdidchange(from:to:reason:)","title":"func viewportStatusDidChange(from: ViewportStatus, to: ViewportStatus, reason: ViewportStatusChangeReason)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportstatusobserver","title":"ViewportStatusObserver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/idlerequested","title":"static let idleRequested: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionfailed","title":"static let transitionFailed: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionstarted","title":"static let transitionStarted: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionsucceeded","title":"static let transitionSucceeded: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/userinteraction","title":"static let userInteraction: ViewportStatusChangeReason","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason","title":"ViewportStatusChangeReason","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (_ camera: CameraOptions) -> Bool) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportstate","title":"ViewportState","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/options","title":"var options: FollowPuckViewportStateOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/viewportstate-implementations","title":"ViewportState Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstate","title":"FollowPuckViewportState","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/init(padding:zoom:bearing:pitch:)","title":"init(padding: UIEdgeInsets?, zoom: CGFloat?, bearing: FollowPuckViewportStateBearing?, pitch: CGFloat?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/bearing","title":"var bearing: FollowPuckViewportStateBearing?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/padding","title":"var padding: UIEdgeInsets?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/pitch","title":"var pitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/zoom","title":"var zoom: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions","title":"FollowPuckViewportStateOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/constant(_:)","title":"case constant(CLLocationDirection)","type":"case"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/course","title":"case course","type":"case"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/heading","title":"case heading","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing","title":"FollowPuckViewportStateBearing","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/options","title":"var options: OverviewViewportStateOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/viewportstate-implementations","title":"ViewportState Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstate","title":"OverviewViewportState","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/init(geometry:padding:bearing:pitch:animationduration:)","title":"init(geometry: GeometryConvertible, padding: UIEdgeInsets, bearing: CLLocationDirection?, pitch: CGFloat?, animationDuration: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/animationduration","title":"var animationDuration: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/bearing","title":"var bearing: CLLocationDirection?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/padding","title":"var padding: UIEdgeInsets","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/pitch","title":"var pitch: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions","title":"OverviewViewportStateOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewporttransition\/run(to:completion:)","title":"func run(to: ViewportState, completion: (_ success: Bool) -> Void) -> Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewporttransition","title":"ViewportTransition","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/options","title":"var options: DefaultViewportTransitionOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/run(to:completion:)","title":"func run(to: ViewportState, completion: (Bool) -> Void) -> Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/viewporttransition-implementations","title":"ViewportTransition Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransition","title":"DefaultViewportTransition","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/init(maxduration:)","title":"init(maxDuration: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/maxduration","title":"var maxDuration: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions","title":"DefaultViewportTransitionOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/immediateviewporttransition\/run(to:completion:)","title":"func run(to: ViewportState, completion: (Bool) -> Void) -> Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/immediateviewporttransition","title":"ImmediateViewportTransition","type":"class"},{"title":"Offline","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/allstylepacks(completion:)","title":"func allStylePacks(completion: (Result<[StylePack], Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/createtilesetdescriptor(for:)","title":"func createTilesetDescriptor(for: TilesetDescriptorOptions) -> TilesetDescriptor","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/loadstylepack(for:loadoptions:progress:completion:)","title":"func loadStylePack(for: StyleURI, loadOptions: StylePackLoadOptions, progress: StylePackLoadProgressCallback?, completion: (Result<StylePack, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/removestylepack(for:completion:)","title":"func removeStylePack(for: StyleURI, completion: ((Result<StylePack, Error>) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/removestylepack(forstyleuri:)","title":"func removeStylePack(forStyleURI: String)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/stylepack(for:completion:)","title":"func stylePack(for: StyleURI, completion: (Result<StylePack, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/stylepackmetadata(for:completion:)","title":"func stylePackMetadata(for: StyleURI, completion: (Result<AnyObject, Error>) -> Void)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlinemanager","title":"OfflineManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/getgeometrydefinition()","title":"func getGeometryDefinition() -> OfflineRegionGeometryDefinition?","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/getidentifier()","title":"func getIdentifier() -> Int64","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/getmetadata()","title":"func getMetadata() -> Data","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/getstatus(completion:)","title":"func getStatus(completion: (Result<OfflineRegionStatus, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/gettilepyramiddefinition()","title":"func getTilePyramidDefinition() -> OfflineRegionTilePyramidDefinition?","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/invalidate(completion:)","title":"func invalidate(completion: (Result<Void, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/purge(completion:)","title":"func purge(completion: (Result<Void, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/setmetadata(_:completion:)","title":"func setMetadata(Data, completion: (Result<Void, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/setofflineregiondownloadstatefor(_:)","title":"func setOfflineRegionDownloadStateFor(OfflineRegionDownloadState)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/setofflineregionobserverfor(_:)","title":"func setOfflineRegionObserverFor(OfflineRegionObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregion","title":"OfflineRegion","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/createofflineregion(for:completion:)-1hg2e","title":"func createOfflineRegion(for: OfflineRegionGeometryDefinition, completion: (Result<OfflineRegion, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/createofflineregion(for:completion:)-h42u","title":"func createOfflineRegion(for: OfflineRegionTilePyramidDefinition, completion: (Result<OfflineRegion, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/mergeofflinedatabase(for:completion:)","title":"func mergeOfflineDatabase(for: String, completion: (_ result: Result<OfflineRegion, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/mergeofflinedatabase(forpath:completion:)","title":"func mergeOfflineDatabase(forPath: String, completion: (Result<[OfflineRegion], Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/offlineregions(completion:)","title":"func offlineRegions(completion: (Result<[OfflineRegion], Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/setofflinemapboxtilecountlimitforlimit(_:)","title":"func setOfflineMapboxTileCountLimitForLimit(UInt64)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregionmanager","title":"OfflineRegionManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/init(styleurl:geometry:minzoom:maxzoom:pixelratio:glyphsrasterizationmode:)","title":"init(styleURL: String, geometry: Geometry, minZoom: Double, maxZoom: Double, pixelRatio: Float, glyphsRasterizationMode: GlyphsRasterizationMode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/geometry","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/glyphsrasterizationmode","title":"var glyphsRasterizationMode: GlyphsRasterizationMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/maxzoom","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/minzoom","title":"var minZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/pixelratio","title":"var pixelRatio: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/styleurl","title":"var styleURL: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition","title":"OfflineRegionGeometryDefinition","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/canceled(_:)","title":"case canceled(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/diskfull(_:)","title":"case diskFull(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/doesnotexist(_:)","title":"case doesNotExist(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/other(_:)","title":"case other(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/errordescription-5op4t","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/errordescription-3f6le","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum","title":"StylePackError","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/init(glyphsrasterizationmode:metadata:acceptexpired:extraoptions:)","title":"init?(glyphsRasterizationMode: GlyphsRasterizationMode?, metadata: Any?, acceptExpired: Bool, extraOptions: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/acceptexpired","title":"var acceptExpired: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/extraoptions","title":"var extraOptions: Any?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/glyphsrasterizationmode","title":"var glyphsRasterizationMode: GlyphsRasterizationMode?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/metadata","title":"var metadata: Any?","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackloadoptions","title":"StylePackLoadOptions","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/canceled(_:)","title":"case canceled(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/diskfull(_:)","title":"case diskFull(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/doesnotexist(_:)","title":"case doesNotExist(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/other(_:)","title":"case other(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/tilecountexceeded(_:)","title":"case tileCountExceeded(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/tilesetdescriptor(_:)","title":"case tilesetDescriptor(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/errordescription-4qi07","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/errordescription-6az5x","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.enum","title":"TileRegionError","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/init(geometry:descriptors:metadata:acceptexpired:networkrestriction:averagebytespersecond:extraoptions:)","title":"init?(geometry: Geometry?, descriptors: [TilesetDescriptor]?, metadata: Any?, acceptExpired: Bool, networkRestriction: NetworkRestriction, averageBytesPerSecond: Int?, extraOptions: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/acceptexpired","title":"var acceptExpired: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/averagebytespersecond","title":"var averageBytesPerSecond: Int?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/descriptors","title":"var descriptors: [TilesetDescriptor]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/extraoptions","title":"var extraOptions: Any?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/geometry","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/metadata","title":"var metadata: Any?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadoptions\/networkrestriction","title":"var networkRestriction: NetworkRestriction","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionloadoptions","title":"TileRegionLoadOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/init(styleuri:minzoom:maxzoom:pixelratio:tilesets:stylepack:extraoptions:)","title":"init(styleURI: String, minZoom: UInt8, maxZoom: UInt8, pixelRatio: Float, tilesets: [String]?, stylePack: StylePackLoadOptions?, extraOptions: Any?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/init(styleuri:minzoom:maxzoom:pixelratio:tilesets:stylepackoptions:extraoptions:)","title":"init(styleURI: String, minZoom: UInt8, maxZoom: UInt8, pixelRatio: Float, tilesets: [String]?, stylePackOptions: StylePackLoadOptions?, extraOptions: Any?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/init(styleuri:minzoom:maxzoom:tilesets:stylepack:extraoptions:)","title":"init(styleURI: String, minZoom: UInt8, maxZoom: UInt8, tilesets: [String]?, stylePack: StylePackLoadOptions?, extraOptions: Any?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/init(styleuri:minzoom:maxzoom:tilesets:stylepackoptions:extraoptions:)","title":"init(styleURI: String, minZoom: UInt8, maxZoom: UInt8, tilesets: [String]?, stylePackOptions: StylePackLoadOptions?, extraOptions: Any?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/init(styleuri:zoomrange:pixelratio:tilesets:stylepackoptions:extraoptions:)","title":"init(styleURI: StyleURI, zoomRange: ClosedRange<UInt8>, pixelRatio: Float, tilesets: [String]?, stylePackOptions: StylePackLoadOptions?, extraOptions: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/extraoptions","title":"var extraOptions: Any?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/maxzoom","title":"var maxZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/minzoom","title":"var minZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/pixelratio","title":"var pixelRatio: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/stylepackoptions","title":"var stylePackOptions: StylePackLoadOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/styleuri","title":"var styleURI: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/tilesets","title":"var tilesets: [String]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions","title":"TilesetDescriptorOptions","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestore\/alltileregions(completion:)","title":"func allTileRegions(completion: (Result<[TileRegion], Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/loadtileregion(forid:loadoptions:progress:completion:)","title":"func loadTileRegion(forId: String, loadOptions: TileRegionLoadOptions, progress: TileRegionLoadProgressCallback?, completion: (Result<TileRegion, Error>) -> Void) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/removetileregion(forid:)","title":"func removeTileRegion(forId: String)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/setoptionforkey(_:domain:value:)","title":"func setOptionForKey(String, domain: TileDataDomain, value: Any)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/setoptionforkey(_:value:)","title":"func setOptionForKey(String, value: Any)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/subscribe(_:)","title":"func subscribe(TileStoreObserver) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/tileregion(forid:completion:)","title":"func tileRegion(forId: String, completion: (Result<TileRegion, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/tileregioncontainsdescriptors(forid:descriptors:completion:)","title":"func tileRegionContainsDescriptors(forId: String, descriptors: [TilesetDescriptor], completion: (Result<Bool, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/tileregiongeometry(forid:completion:)","title":"func tileRegionGeometry(forId: String, completion: (Result<Geometry, Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestore\/tileregionmetadata(forid:completion:)","title":"func tileRegionMetadata(forId: String, completion: (Result<Any, Error>) -> Void)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestore\/default","title":"static var `default`: TileStore","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestore\/shared(for:)","title":"static func shared(for: URL) -> TileStore","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilestore","title":"TileStore","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregiongeometrychanged(forid:geometry:)","title":"func onRegionGeometryChanged(forId: String, geometry: Geometry?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionloadfinished(forid:region:)","title":"func onRegionLoadFinished(forId: String, region: Result<TileRegion, Error>)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionloadprogress(forid:progress:)","title":"func onRegionLoadProgress(forId: String, progress: TileRegionLoadProgress)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionmetadatachanged(forid:value:)","title":"func onRegionMetadataChanged(forId: String, value: Any)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionremoved(forid:)","title":"func onRegionRemoved(forId: String)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilestoreobserver","title":"TileStoreObserver","type":"protocol"},{"title":"Custom Networking Stack","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/init(type:message:)","title":"init(type: HttpRequestErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/type","title":"var type: HttpRequestErrorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/httprequesterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/errordescription-5kgon","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/errordescription-5qv21","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequesterror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/httprequesterror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/httprequesterror","title":"HttpRequestError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpresponse\/init(identifier:request:result:)","title":"convenience init(identifier: UInt64, request: HttpRequest, result: Result<HttpResponseData, HttpRequestError>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpresponse\/request","title":"var request: HttpRequest","type":"property"},{"path":"\/documentation\/mapboxmaps\/httpresponse\/requestid","title":"var requestId: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/httpresponse\/result","title":"var result: Result<HttpResponseData, HttpRequestError>","type":"property"}],"path":"\/documentation\/mapboxmaps\/httpresponse","title":"HttpResponse","type":"class"},{"title":"GeoJSON","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/init(geometry:)-26txa","title":"init(geometry: GeometryConvertible?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/init(geometry:)-fxio","title":"init(geometry: Geometry)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/geometry-m6d9","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/identifier-9lau7","title":"var identifier: FeatureIdentifier?","type":"property"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/properties-6jqem","title":"var properties: JSONObject?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/mapboxmaps\/feature-swift.struct\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/feature-swift.struct","title":"Feature","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/geometrycollection(_:)","title":"case geometryCollection(GeometryCollection)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/linestring(_:)","title":"case lineString(LineString)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/multilinestring(_:)","title":"case multiLineString(MultiLineString)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/multipoint(_:)","title":"case multiPoint(MultiPoint)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/multipolygon(_:)","title":"case multiPolygon(MultiPolygon)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/point(_:)","title":"case point(Point)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/polygon(_:)","title":"case polygon(Polygon)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/init(_:)","title":"init(GeometryConvertible)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/geometry-3tp0p","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/geometry-swift.enum\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geometry-swift.enum","title":"Geometry","type":"enum"},{"title":"Utilities","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.property","title":"var style: CompassDirectionFormatter.Style","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/string(from:)","title":"func string(from: CLLocationDirection) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/long","title":"case long","type":"case"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/short","title":"case short","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum","title":"CompassDirectionFormatter.Style","type":"enum"}],"path":"\/documentation\/mapboxmaps\/compassdirectionformatter","title":"CompassDirectionFormatter","type":"class"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/init(_:)-13kaj","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/init(_:)-24hfp","title":"init<C>(C)","type":"init"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/init(_:)-5to9x","title":"init(() -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-3m1sp","title":"func store(in: inout Set<AnyCancelable>)","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-7gtoz","title":"func store(in: inout Set<Combine.AnyCancellable>)","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-84gyl","title":"func store<C>(in: inout C)","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-oh7e","title":"func store<C>(in: inout C)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/==(_:_:)","title":"static func == (AnyCancelable, AnyCancelable) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/anycancelable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/anycancelable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/anycancelable","title":"AnyCancelable","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.class\/init(bounds:maxzoom:minzoom:maxpitch:minpitch:)","title":"init(bounds: CoordinateBounds, maxZoom: Double, minZoom: Double, maxPitch: Double, minPitch: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.class\/bounds-5v7l5","title":"var bounds: CoordinateBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.class\/maxpitch-24q92","title":"var maxPitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.class\/maxzoom-393un","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.class\/minpitch-17h35","title":"var minPitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds-swift.class\/minzoom-8dynw","title":"var minZoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/camerabounds-swift.class","title":"CameraBounds","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.class\/bounds-23fne","title":"var bounds: CoordinateBounds?","type":"property"}],"path":"\/documentation\/mapboxmaps\/cameraboundsoptions-swift.class","title":"CameraBoundsOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerachanged\/init(camerastate:timestamp:)","title":"init(cameraState: CameraState, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerachanged\/camerastate","title":"var cameraState: CameraState","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerachanged\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/camerachanged","title":"CameraChanged","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/cameraforcoordinatebounds(for:padding:bearing:pitch:maxzoom:offset:)","title":"func cameraForCoordinateBounds(for: CoordinateBounds, padding: EdgeInsets?, bearing: NSNumber?, pitch: NSNumber?, maxZoom: NSNumber?, offset: ScreenCoordinate?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/cameraforcoordinates(forcoordinates:camera:box:)","title":"func cameraForCoordinates(forCoordinates: [CLLocation], camera: CameraOptions, box: ScreenBox) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/cameraforcoordinates(forcoordinates:padding:bearing:pitch:)","title":"func cameraForCoordinates(forCoordinates: [CLLocation], padding: EdgeInsets?, bearing: NSNumber?, pitch: NSNumber?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/cameraforgeometry(for:padding:bearing:pitch:)","title":"func cameraForGeometry(for: Geometry, padding: EdgeInsets?, bearing: NSNumber?, pitch: NSNumber?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinateboundsforcamera(forcamera:)","title":"func coordinateBoundsForCamera(forCamera: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinateboundsforcameraunwrapped(forcamera:)","title":"func coordinateBoundsForCameraUnwrapped(forCamera: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinateboundszoomforcamera(forcamera:)","title":"func coordinateBoundsZoomForCamera(forCamera: CameraOptions) -> CoordinateBoundsZoom","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinateboundszoomforcameraunwrapped(forcamera:)","title":"func coordinateBoundsZoomForCameraUnwrapped(forCamera: CameraOptions) -> CoordinateBoundsZoom","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinateforpixel(forpixel:)","title":"func coordinateForPixel(forPixel: ScreenCoordinate) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinateinfoforpixel(forpixel:)","title":"func coordinateInfoForPixel(forPixel: ScreenCoordinate) -> CoordinateInfo","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinatesforpixels(forpixels:)","title":"func coordinatesForPixels(forPixels: [ScreenCoordinate]) -> [CLLocation]","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/coordinatesinfoforpixels(forpixels:)","title":"func coordinatesInfoForPixels(forPixels: [ScreenCoordinate]) -> [CoordinateInfo]","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/dragend()","title":"func dragEnd()","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/dragstart(forpoint:)","title":"func dragStart(forPoint: ScreenCoordinate)","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/getbounds()","title":"func getBounds() -> CameraBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/getcamerastate()","title":"func getCameraState() -> CameraState","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/getdragcameraoptionsfor(frompoint:topoint:)","title":"func getDragCameraOptionsFor(fromPoint: ScreenCoordinate, toPoint: ScreenCoordinate) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/getfreecameraoptions()","title":"func getFreeCameraOptions() -> FreeCameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/getrenderworldcopies()","title":"func getRenderWorldCopies() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/pixelforcoordinate(for:)","title":"func pixelForCoordinate(for: CLLocationCoordinate2D) -> ScreenCoordinate","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/pixelsforcoordinates(forcoordinates:)","title":"func pixelsForCoordinates(forCoordinates: [CLLocation]) -> [ScreenCoordinate]","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/setcamerafor(_:)-4yvaa","title":"func setCameraFor(CameraOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/setcamerafor(_:)-6wav3","title":"func setCameraFor(FreeCameraOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameramanager\/setrenderworldcopiesforrenderworldcopies(_:)","title":"func setRenderWorldCopiesForRenderWorldCopies(Bool)","type":"method"}],"path":"\/documentation\/mapboxmaps\/cameramanager","title":"CameraManager","type":"class"},{"path":"\/documentation\/mapboxmaps\/cameraoptions-swift.class","title":"CameraOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.class\/init(center:padding:zoom:bearing:pitch:)-868os","title":"init(center: CLLocationCoordinate2D, padding: EdgeInsets, zoom: Double, bearing: Double, pitch: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.class\/bearing-4qmic","title":"var bearing: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.class\/center-1u7p3","title":"var center: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.class\/padding-ndl","title":"var padding: EdgeInsets","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.class\/pitch-2norw","title":"var pitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate-swift.class\/zoom-7zaxw","title":"var zoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/camerastate-swift.class","title":"CameraState","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateboundszoom\/init(bounds:zoom:)","title":"init(bounds: CoordinateBounds, zoom: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateboundszoom\/bounds","title":"var bounds: CoordinateBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinateboundszoom\/zoom","title":"var zoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/coordinateboundszoom","title":"CoordinateBoundsZoom","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateinfo\/init(coordinate:isonsurface:)","title":"init(coordinate: CLLocationCoordinate2D, isOnSurface: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateinfo\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinateinfo\/isonsurface","title":"var isOnSurface: Bool","type":"property"}],"path":"\/documentation\/mapboxmaps\/coordinateinfo","title":"CoordinateInfo","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/init(isrendertotilesupported:shouldrerendertiles:)","title":"init(isRenderToTileSupported: Bool, shouldRerenderTiles: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/isrendertotilesupported","title":"var isRenderToTileSupported: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/shouldrerendertiles","title":"var shouldRerenderTiles: Bool","type":"property"}],"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration","title":"CustomLayerRenderConfiguration","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/init(width:height:latitude:longitude:zoom:bearing:pitch:fieldofview:projectionmatrix:elevationdata:)","title":"init(width: Double, height: Double, latitude: Double, longitude: Double, zoom: Double, bearing: Double, pitch: Double, fieldOfView: Double, projectionMatrix: [NSNumber], elevationData: ElevationData?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/init(width:height:latitude:longitude:zoom:bearing:pitch:fieldofview:projectionmatrix:elevationdata:rendertotilesids:)","title":"init(width: Double, height: Double, latitude: Double, longitude: Double, zoom: Double, bearing: Double, pitch: Double, fieldOfView: Double, projectionMatrix: [NSNumber], elevationData: ElevationData?, renderToTilesIDs: [CanonicalTileID]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/bearing","title":"var bearing: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/elevationdata","title":"var elevationData: ElevationData?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/fieldofview","title":"var fieldOfView: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/height","title":"var height: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/latitude","title":"var latitude: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/longitude","title":"var longitude: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/pitch","title":"var pitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/projectionmatrix","title":"var projectionMatrix: [NSNumber]","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/rendertotilesids","title":"var renderToTilesIDs: [CanonicalTileID]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/width","title":"var width: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/zoom","title":"var zoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters","title":"CustomLayerRenderParameters","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/dataref\/init(data:)","title":"init(data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/dataref\/data","title":"let data: Data","type":"property"}],"path":"\/documentation\/mapboxmaps\/dataref","title":"DataRef","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/downloadoptions\/init(request:localpath:)","title":"init(request: HttpRequest, localPath: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/downloadoptions\/init(request:localpath:resume:memorythreshold:)","title":"init(request: HttpRequest, localPath: String, resume: Bool, memoryThreshold: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/downloadoptions\/localpath","title":"var localPath: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/downloadoptions\/memorythreshold","title":"var memoryThreshold: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/downloadoptions\/request","title":"var request: HttpRequest","type":"property"},{"path":"\/documentation\/mapboxmaps\/downloadoptions\/resume","title":"var resume: Bool","type":"property"}],"path":"\/documentation\/mapboxmaps\/downloadoptions","title":"DownloadOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/edgeinsets\/init(top:left:bottom:right:)","title":"init(top: Double, left: Double, bottom: Double, right: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/edgeinsets\/bottom","title":"var bottom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/edgeinsets\/left","title":"var left: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/edgeinsets\/right","title":"var right: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/edgeinsets\/top","title":"var top: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/edgeinsets\/isequal(to:)","title":"func isEqual(to: EdgeInsets) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/edgeinsets","title":"EdgeInsets","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/eventtimeinterval\/init(begin:end:)","title":"init(begin: Date, end: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/eventtimeinterval\/begin","title":"var begin: Date","type":"property"},{"path":"\/documentation\/mapboxmaps\/eventtimeinterval\/end","title":"var end: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/eventtimeinterval","title":"EventTimeInterval","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.class\/init(identifier:geometry:properties:)","title":"init(identifier: NSObject, geometry: Geometry, properties: [String : NSObject])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature-swift.class\/geometry-1zco3","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/feature-swift.class\/identifier-56jg6","title":"var identifier: NSObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/feature-swift.class\/properties-86t6h","title":"var properties: [String : NSObject]","type":"property"}],"path":"\/documentation\/mapboxmaps\/feature-swift.class","title":"Feature","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/getorientation()","title":"func getOrientation() -> Vec4?","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/getposition()","title":"func getPosition() -> Vec3?","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/lookatpoint(forlocation:)","title":"func lookAtPoint(forLocation: CLLocationCoordinate2D)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/lookatpoint(forlocation:altitude:)","title":"func lookAtPoint(forLocation: CLLocationCoordinate2D, altitude: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/lookatpoint(forlocation:altitude:upvector:)","title":"func lookAtPoint(forLocation: CLLocationCoordinate2D, altitude: Double, upVector: Vec3)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setlocationforlocation(_:altitude:)","title":"func setLocationForLocation(CLLocationCoordinate2D, altitude: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setorientationfororientation(_:)","title":"func setOrientationForOrientation(Vec4?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setpitchbearingforpitch(_:bearing:)","title":"func setPitchBearingForPitch(Double, bearing: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setpositionforposition(_:)","title":"func setPositionForPosition(Vec3?)","type":"method"}],"path":"\/documentation\/mapboxmaps\/freecameraoptions","title":"FreeCameraOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/genericevent\/init(name:data:timeinterval:)","title":"init(name: String, data: Any, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/genericevent\/data","title":"var data: Any","type":"property"},{"path":"\/documentation\/mapboxmaps\/genericevent\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/genericevent\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/genericevent","title":"GenericEvent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/init(value:)","title":"init(value: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/type","title":"var type: GeoJSONSourceDataType","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/value","title":"var value: Any","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/getfeature()","title":"func getFeature() -> Feature","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/getgeometry()","title":"func getGeometry() -> Geometry","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/getnsarray()","title":"func getNSArray() -> [Feature]","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/getnsstring()","title":"func getNSString() -> String","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/isfeature()","title":"func isFeature() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/isgeometry()","title":"func isGeometry() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/isnsarray()","title":"func isNSArray() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/isnsstring()","title":"func isNSString() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/fromfeature(_:)","title":"class func fromFeature(Feature) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/fromgeometry(_:)","title":"class func fromGeometry(Geometry) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/fromnsarray(_:)","title":"class func fromNSArray([Feature]) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class\/fromnsstring(_:)","title":"class func fromNSString(String) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedata-swift.class","title":"GeoJSONSourceData","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/init(geometrycollection:)","title":"init(geometryCollection: [Geometry])","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/init(line:)","title":"init(line: [NSValue])","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/init(multiline:)","title":"init(multiLine: [[NSValue]])","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/init(multipoint:)","title":"init(multiPoint: [NSValue])","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/init(multipolygon:)","title":"init(multiPolygon: [[[NSValue]]])","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/init(point:)","title":"init(point: NSValue)","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/init(polygon:)","title":"init(polygon: [[NSValue]])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/geometry-7p6nm","title":"var geometry: UnsafeMutableRawPointer","type":"property"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/geometrytype","title":"var geometryType: GeometryType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/extractgeometriesarray()","title":"func extractGeometriesArray() -> [Geometry]?","type":"method"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/extractlocations()","title":"func extractLocations() -> NSValue?","type":"method"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/extractlocations2darray()","title":"func extractLocations2DArray() -> [[NSValue]]?","type":"method"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/extractlocations3darray()","title":"func extractLocations3DArray() -> [[[NSValue]]]?","type":"method"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.class\/extractlocationsarray()","title":"func extractLocationsArray() -> [NSValue]?","type":"method"}],"path":"\/documentation\/mapboxmaps\/geometry-swift.class","title":"Geometry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequest\/init(method:url:headers:keepcompression:timeout:networkrestriction:sdkinformation:body:)","title":"init(method: HttpMethod, url: String, headers: [String : String], keepCompression: Bool, timeout: UInt64, networkRestriction: NetworkRestriction, sdkInformation: SdkInformation, body: Data?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/httprequest\/init(url:headers:sdkinformation:body:)","title":"init(url: String, headers: [String : String], sdkInformation: SdkInformation, body: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequest\/body","title":"var body: Data?","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequest\/headers","title":"var headers: [String : String]","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequest\/keepcompression","title":"var keepCompression: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequest\/method","title":"var method: HttpMethod","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequest\/networkrestriction","title":"var networkRestriction: NetworkRestriction","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequest\/sdkinformation","title":"var sdkInformation: SdkInformation","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequest\/timeout","title":"var timeout: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/httprequest\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/httprequest","title":"HttpRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpresponsedata\/init(headers:code:data:)","title":"init(headers: [String : String], code: Int32, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpresponsedata\/code","title":"var code: Int32","type":"property"},{"path":"\/documentation\/mapboxmaps\/httpresponsedata\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/mapboxmaps\/httpresponsedata\/headers","title":"var headers: [String : String]","type":"property"}],"path":"\/documentation\/mapboxmaps\/httpresponsedata","title":"HttpResponseData","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpservicefactory\/sethttpserviceinterceptorforinterceptor(_:)","title":"class func setHttpServiceInterceptorForInterceptor(HttpServiceInterceptorInterface?)","type":"method"}],"path":"\/documentation\/mapboxmaps\/httpservicefactory","title":"HttpServiceFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/image\/init(width:height:data:)","title":"init(width: UInt32, height: UInt32, data: DataRef)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/image\/data","title":"var data: DataRef","type":"property"},{"path":"\/documentation\/mapboxmaps\/image\/height","title":"var height: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/image\/width","title":"var width: UInt32","type":"property"}],"path":"\/documentation\/mapboxmaps\/image","title":"Image","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/init(left:top:right:bottom:)","title":"init(left: Float, top: Float, right: Float, bottom: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/bottom","title":"var bottom: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/left","title":"var left: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/right","title":"var right: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/top","title":"var top: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/isequal(to:)","title":"func isEqual(to: ImageContent) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagecontent","title":"ImageContent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/init(first:second:)","title":"init(first: Float, second: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/first","title":"var first: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/second","title":"var second: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/isequal(to:)","title":"func isEqual(to: ImageStretches) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagestretches","title":"ImageStretches","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/intervalsettings\/init(minimuminterval:maximuminterval:interval:)","title":"init(minimumInterval: NSNumber?, maximumInterval: NSNumber?, interval: NSNumber?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/intervalsettings\/interval","title":"var interval: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxmaps\/intervalsettings\/maximuminterval","title":"var maximumInterval: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxmaps\/intervalsettings\/minimuminterval","title":"var minimumInterval: NSNumber?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/intervalsettings\/isequal(to:)","title":"func isEqual(to: IntervalSettings) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/intervalsettings","title":"IntervalSettings","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerposition-swift.class\/above","title":"var above: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layerposition-swift.class\/below","title":"var below: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/layerposition-swift.class","title":"LayerPosition","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/location\/init(cllocation:)-7p9ct","title":"init(CLLocation: CLLocation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/location\/init(cllocation:)-9izcj","title":"init(clLocation: CLLocation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/location\/init(coordinate:timestamp:altitude:horizontalaccuracy:verticalaccuracy:speed:speedaccuracy:bearing:bearingaccuracy:floor:source:extra:)","title":"convenience init(coordinate: CLLocationCoordinate2D, timestamp: Date, altitude: CLLocationDistance?, horizontalAccuracy: CLLocationAccuracy?, verticalAccuracy: CLLocationAccuracy?, speed: CLLocationSpeed?, speedAccuracy: CLLocationSpeedAccuracy?, bearing: CLLocationDirection?, bearingAccuracy: CLLocationDirectionAccuracy?, floor: Int?, source: String?, extra: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/location\/altitude","title":"var altitude: CLLocationDistance?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/bearing","title":"var bearing: CLLocationDirection?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/bearingaccuracy","title":"var bearingAccuracy: CLLocationDirectionAccuracy?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/extra","title":"var extra: Any?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/floor","title":"var floor: Int?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/horizontalaccuracy","title":"var horizontalAccuracy: CLLocationAccuracy?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/speed","title":"var speed: CLLocationSpeed?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/speedaccuracy","title":"var speedAccuracy: CLLocationSpeedAccuracy?","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/timestamp","title":"var timestamp: Date","type":"property"},{"path":"\/documentation\/mapboxmaps\/location\/verticalaccuracy","title":"var verticalAccuracy: CLLocationAccuracy?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/location\/isequal(to:)","title":"func isEqual(to: Location) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/location","title":"Location","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationerror\/init(code:message:)","title":"init(code: LocationErrorCode, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationerror\/code","title":"var code: LocationErrorCode","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationerror\/message","title":"var message: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/locationerror","title":"LocationError","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationextrakeys\/isexternal","title":"class var isExternal: String!","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationextrakeys\/ismock","title":"class var isMock: String!","type":"property"}],"path":"\/documentation\/mapboxmaps\/locationextrakeys","title":"LocationExtraKeys","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationproviderrequest\/init(accuracy:displacement:interval:)","title":"init(accuracy: NSNumber?, displacement: NSNumber?, interval: IntervalSettings?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationproviderrequest\/accuracy","title":"var accuracy: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationproviderrequest\/displacement","title":"var displacement: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationproviderrequest\/interval","title":"var interval: IntervalSettings?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationproviderrequest\/isequal(to:)","title":"func isEqual(to: LocationProviderRequest) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationproviderrequest","title":"LocationProviderRequest","type":"class"},{"path":"\/documentation\/mapboxmaps\/locationservicefactory","title":"LocationServiceFactory","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logconfiguration\/getlogginglevel()","title":"class func getLoggingLevel() -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxmaps\/logconfiguration\/getlogginglevel(forcategory:)","title":"class func getLoggingLevel(forCategory: String) -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxmaps\/logconfiguration\/registerlogwriterbackend(forlogwriter:)","title":"class func registerLogWriterBackend(forLogWriter: LogWriterBackend?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/logconfiguration\/resetlogginglevel(forcategory:)","title":"class func resetLoggingLevel(forCategory: String)","type":"method"},{"path":"\/documentation\/mapboxmaps\/logconfiguration\/setlogginglevelforcategory(_:upto:)","title":"class func setLoggingLevelForCategory(String, upTo: NSNumber?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/logconfiguration\/setlogginglevelforupto(_:)","title":"class func setLoggingLevelForUpTo(NSNumber?)","type":"method"}],"path":"\/documentation\/mapboxmaps\/logconfiguration","title":"LogConfiguration","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/map\/createrenderer()","title":"func createRenderer()","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/destroyrenderer()","title":"func destroyRenderer()","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/getdebug()","title":"func getDebug() -> [NSNumber]","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/getelevationfor(_:)","title":"func getElevationFor(CLLocationCoordinate2D) -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/getoptions()","title":"func getOptions() -> MapOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/getprefetchzoomdelta()","title":"func getPrefetchZoomDelta() -> UInt8","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/getsize()","title":"func getSize() -> Size","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/isgestureinprogress()","title":"func isGestureInProgress() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/isuseranimationinprogress()","title":"func isUserAnimationInProgress() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/reducememoryuse()","title":"func reduceMemoryUse()","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/render()","title":"func render()","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setconstrainmodefor(_:)","title":"func setConstrainModeFor(ConstrainMode)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setdebugfordebugoptions(_:value:)","title":"func setDebugForDebugOptions([NSNumber], value: Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setgestureinprogressforinprogress(_:)","title":"func setGestureInProgressForInProgress(Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setnorthorientationfor(_:)","title":"func setNorthOrientationFor(NorthOrientation)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setperfstatscollectionfor(_:)","title":"func setPerfStatsCollectionFor(PerfStatsCollectionOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setprefetchzoomdeltafordelta(_:)","title":"func setPrefetchZoomDeltaForDelta(UInt8)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setsizefor(_:)","title":"func setSizeFor(Size)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setuseranimationinprogressforinprogress(_:)","title":"func setUserAnimationInProgressForInProgress(Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/setviewportmodefor(_:)","title":"func setViewportModeFor(ViewportMode)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/triggerrepaint()","title":"func triggerRepaint()","type":"method"}],"path":"\/documentation\/mapboxmaps\/map","title":"Map","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/defaulttransitionduration","title":"class var defaultTransitionDuration: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/maxpitch","title":"class var maxPitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/maxzoom","title":"class var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/minpitch","title":"class var minPitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/minzoom","title":"class var minZoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapconstants","title":"MapConstants","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapidle\/init(timestamp:)","title":"init(timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapidle\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapidle","title":"MapIdle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploaded\/init(timeinterval:)","title":"init(timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/maploaded","title":"MapLoaded","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshot\/attributions()","title":"func attributions() -> [String]","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapsnapshot\/coordinate(for:)","title":"func coordinate(for: ScreenCoordinate) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapsnapshot\/moveimage()","title":"func moveImage() -> Image?","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapsnapshot\/screencoordinate(for:)","title":"func screenCoordinate(for: CLLocationCoordinate2D) -> ScreenCoordinate","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapsnapshot","title":"MapSnapshot","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.class\/glyphsrasterizationoptions-5m4wg","title":"var glyphsRasterizationOptions: GlyphsRasterizationOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.class\/pixelratio-2rjje","title":"var pixelRatio: Float","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions-swift.class","title":"MapSnapshotOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotter\/init(options:)","title":"init(options: MapSnapshotOptions)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotter\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotter\/getelevationfor(_:)","title":"func getElevationFor(CLLocationCoordinate2D) -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotter\/getsize()","title":"func getSize() -> Size","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotter\/setsizefor(_:)","title":"func setSizeFor(Size)","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapsnapshotter","title":"MapSnapshotter","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxcommonsettings\/language","title":"class var language: String!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxcommonsettings\/worldview","title":"class var worldview: String!","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapboxcommonsettings","title":"MapboxCommonSettings","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxoptions\/accesstoken","title":"static var accessToken: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapboxoptions","title":"MapboxOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/init(x:y:)","title":"init(x: Double, y: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/y","title":"var y: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/isequal(to:)","title":"func isEqual(to: MercatorCoordinate) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/mercatorcoordinate","title":"MercatorCoordinate","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/nsexceptionhandler\/try(callback:)","title":"static func `try`<T>(callback: () throws -> T) throws -> T","type":"method"}],"path":"\/documentation\/mapboxmaps\/nsexceptionhandler","title":"NSExceptionHandler","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forcamerachanged:)","title":"func subscribe(forCameraChanged: CameraChangedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(foreventname:callback:)","title":"func subscribe(forEventName: String, callback: GenericEventCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(formapidle:)","title":"func subscribe(forMapIdle: MapIdleCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(formaploaded:)","title":"func subscribe(forMapLoaded: MapLoadedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(formaploadingerror:)","title":"func subscribe(forMapLoadingError: MapLoadingErrorCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forperfstatscollected:)","title":"func subscribe(forPerfStatsCollected: PerfStatsCollectedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forrenderframefinished:)","title":"func subscribe(forRenderFrameFinished: RenderFrameFinishedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forrenderframestarted:)","title":"func subscribe(forRenderFrameStarted: RenderFrameStartedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forresourcerequest:)","title":"func subscribe(forResourceRequest: ResourceRequestCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forsourceadded:)","title":"func subscribe(forSourceAdded: SourceAddedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forsourcedataloaded:)","title":"func subscribe(forSourceDataLoaded: SourceDataLoadedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forsourceremoved:)","title":"func subscribe(forSourceRemoved: SourceRemovedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forstyledataloaded:)","title":"func subscribe(forStyleDataLoaded: StyleDataLoadedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forstyleimagemissing:)","title":"func subscribe(forStyleImageMissing: StyleImageMissingCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forstyleimageremoveunused:)","title":"func subscribe(forStyleImageRemoveUnused: StyleImageRemoveUnusedCallback) -> Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/observable\/subscribe(forstyleloaded:)","title":"func subscribe(forStyleLoaded: StyleLoadedCallback) -> Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/observable","title":"Observable","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/init(type:message:isfatal:retryafter:)","title":"init(type: OfflineRegionErrorType, message: String, isFatal: Bool, retryAfter: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/isfatal","title":"var isFatal: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/retryafter","title":"var retryAfter: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/type","title":"var type: OfflineRegionErrorType","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregionerror","title":"OfflineRegionError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/init(downloadstate:completedresourcecount:completedresourcesize:completedtilecount:requiredtilecount:completedtilesize:requiredresourcecount:requiredresourcecountisprecise:)","title":"init(downloadState: OfflineRegionDownloadState, completedResourceCount: UInt64, completedResourceSize: UInt64, completedTileCount: UInt64, requiredTileCount: UInt64, completedTileSize: UInt64, requiredResourceCount: UInt64, requiredResourceCountIsPrecise: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedtilecount","title":"var completedTileCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedtilesize","title":"var completedTileSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/downloadstate","title":"var downloadState: OfflineRegionDownloadState","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/requiredresourcecountisprecise","title":"var requiredResourceCountIsPrecise: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/requiredtilecount","title":"var requiredTileCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregionstatus","title":"OfflineRegionStatus","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/init(styleurl:bounds:minzoom:maxzoom:pixelratio:glyphsrasterizationmode:)","title":"init(styleURL: String, bounds: CoordinateBounds, minZoom: Double, maxZoom: Double, pixelRatio: Float, glyphsRasterizationMode: GlyphsRasterizationMode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/bounds","title":"var bounds: CoordinateBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/glyphsrasterizationmode","title":"var glyphsRasterizationMode: GlyphsRasterizationMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/maxzoom","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/minzoom","title":"var minZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/pixelratio","title":"var pixelRatio: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/styleurl","title":"var styleURL: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition","title":"OfflineRegionTilePyramidDefinition","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineswitch-5hi1w\/ismapboxstackconnected","title":"var isMapboxStackConnected: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineswitch-5hi1w\/shared","title":"static var shared: OfflineSwitch","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineswitch-5hi1w","title":"OfflineSwitch","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineswitch-7t81h\/ismapboxstackconnected()","title":"func isMapboxStackConnected() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineswitch-7t81h\/setmapboxstackconnectedforconnected(_:)","title":"func setMapboxStackConnectedForConnected(Bool)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineswitch-7t81h\/getinstance()","title":"class func getInstance() -> OfflineSwitch","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineswitch-7t81h\/reset()","title":"class func reset()","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineswitch-7t81h","title":"OfflineSwitch","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfstatscollected\/init(stats:timestamp:)","title":"init(stats: Any, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfstatscollected\/stats","title":"var stats: Any","type":"property"},{"path":"\/documentation\/mapboxmaps\/perfstatscollected\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/perfstatscollected","title":"PerfStatsCollected","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfstatscollectionoptions\/init(sampleroptions:)","title":"init(samplerOptions: [NSNumber])","type":"init"},{"path":"\/documentation\/mapboxmaps\/perfstatscollectionoptions\/init(sampleroptions:framespersample:)","title":"init(samplerOptions: [NSNumber], framesPerSample: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfstatscollectionoptions\/framespersample","title":"var framesPerSample: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/perfstatscollectionoptions\/sampleroptions","title":"var samplerOptions: [NSNumber]","type":"property"}],"path":"\/documentation\/mapboxmaps\/perfstatscollectionoptions","title":"PerfStatsCollectionOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/init(northing:easting:)","title":"init(northing: Double, easting: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/easting","title":"var easting: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/northing","title":"var northing: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/projectedmeters","title":"ProjectedMeters","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projection-1k4n9\/coordinateforprojectedmeters(for:)","title":"class func coordinateForProjectedMeters(for: ProjectedMeters) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-1k4n9\/getmetersperpixelatlatitude(forlatitude:zoom:)","title":"class func getMetersPerPixelAtLatitude(forLatitude: Double, zoom: Double) -> Double","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-1k4n9\/project(for:zoomscale:)","title":"class func project(for: CLLocationCoordinate2D, zoomScale: Double) -> MercatorCoordinate","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-1k4n9\/projectedmetersforcoordinate(for:)","title":"class func projectedMetersForCoordinate(for: CLLocationCoordinate2D) -> ProjectedMeters","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-1k4n9\/unproject(for:zoomscale:)","title":"class func unproject(for: MercatorCoordinate, zoomScale: Double) -> CLLocationCoordinate2D","type":"method"}],"path":"\/documentation\/mapboxmaps\/projection-1k4n9","title":"Projection","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/latitudemax","title":"static let latitudeMax: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/latitudemin","title":"static let latitudeMin: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/latituderange","title":"static let latitudeRange: (ClosedRange<CLLocationDegrees>)","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/coordinate(for:)","title":"static func coordinate(for: ProjectedMeters) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/metersperpoint(for:zoom:)","title":"static func metersPerPoint(for: CLLocationDegrees, zoom: CGFloat) -> Double","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/project(_:zoomscale:)","title":"static func project(CLLocationCoordinate2D, zoomScale: CGFloat) -> MercatorCoordinate","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/projectedmeters(for:)","title":"static func projectedMeters(for: CLLocationCoordinate2D) -> ProjectedMeters","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection-ei\/unproject(_:zoomscale:)","title":"static func unproject(MercatorCoordinate, zoomScale: CGFloat) -> CLLocationCoordinate2D","type":"method"}],"path":"\/documentation\/mapboxmaps\/projection-ei","title":"Projection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/queriedrenderedfeature\/layers","title":"var layers: [String]","type":"property"},{"path":"\/documentation\/mapboxmaps\/queriedrenderedfeature\/queriedfeature","title":"var queriedFeature: QueriedFeature","type":"property"}],"path":"\/documentation\/mapboxmaps\/queriedrenderedfeature","title":"QueriedRenderedFeature","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/queriedsourcefeature\/queriedfeature","title":"var queriedFeature: QueriedFeature","type":"property"}],"path":"\/documentation\/mapboxmaps\/queriedsourcefeature","title":"QueriedSourceFeature","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/init(rendermode:needsrepaint:placementchanged:timeinterval:)","title":"init(renderMode: RenderModeType, needsRepaint: Bool, placementChanged: Bool, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/needsrepaint","title":"var needsRepaint: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/payload","title":"var payload: RenderFrameFinished","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/placementchanged","title":"var placementChanged: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/rendermode","title":"var renderMode: RenderModeType","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/renderframefinished","title":"RenderFrameFinished","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframestarted\/init(timestamp:)","title":"init(timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframestarted\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/renderframestarted","title":"RenderFrameStarted","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/init(value:)","title":"init(value: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/type","title":"var type: RenderedQueryGeometryType","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/value","title":"var value: Any","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/getnsarray()","title":"func getNSArray() -> [ScreenCoordinate]","type":"method"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/getscreenbox()","title":"func getScreenBox() -> ScreenBox","type":"method"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/getscreencoordinate()","title":"func getScreenCoordinate() -> ScreenCoordinate","type":"method"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/isnsarray()","title":"func isNSArray() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/isscreenbox()","title":"func isScreenBox() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/isscreencoordinate()","title":"func isScreenCoordinate() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/fromnsarray(_:)","title":"class func fromNSArray([ScreenCoordinate]) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/fromscreenbox(_:)","title":"class func fromScreenBox(ScreenBox) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/fromscreencoordinate(_:)","title":"class func fromScreenCoordinate(ScreenCoordinate) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/renderedquerygeometry","title":"RenderedQueryGeometry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/init(url:resource:priority:loadingmethod:)","title":"init(url: String, resource: RequestResourceType, priority: RequestPriorityType, loadingMethod: [NSNumber])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/loadingmethod","title":"var loadingMethod: [RequestLoadingMethodType]","type":"property"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/priority","title":"var priority: RequestPriorityType","type":"property"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/resource","title":"var resource: RequestResourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/requestinfo","title":"RequestInfo","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/init(source:request:response:cancelled:timeinterval:)","title":"init(source: RequestDataSourceType, request: RequestInfo, response: ResponseInfo?, cancelled: Bool, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/cancelled","title":"var cancelled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/datasource","title":"var dataSource: RequestDataSourceType?","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/payload","title":"var payload: ResourceRequest","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/request","title":"var request: RequestInfo","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/response","title":"var response: ResponseInfo?","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/source","title":"var source: RequestDataSourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/resourcerequest","title":"ResourceRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequesterror\/init(reason:message:)","title":"init(reason: RequestErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequesterror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequesterror\/reason","title":"var reason: RequestErrorType","type":"property"}],"path":"\/documentation\/mapboxmaps\/resourcerequesterror","title":"ResourceRequestError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/init(nocontent:notmodified:mustrevalidate:source:size:modified:expires:etag:error:)","title":"init(noContent: Bool, notModified: Bool, mustRevalidate: Bool, source: ResponseSourceType, size: UInt64, modified: Date?, expires: Date?, etag: String?, error: ResourceRequestError?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/error","title":"var error: ResourceRequestError?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/etag","title":"var etag: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/modified","title":"var modified: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/mustrevalidate","title":"var mustRevalidate: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/nocontent","title":"var noContent: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/notmodified","title":"var notModified: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/size","title":"var size: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/source","title":"var source: ResponseSourceType","type":"property"}],"path":"\/documentation\/mapboxmaps\/responseinfo","title":"ResponseInfo","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/screenbox\/init(min:max:)","title":"init(min: ScreenCoordinate, max: ScreenCoordinate)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/screenbox\/max","title":"var max: ScreenCoordinate","type":"property"},{"path":"\/documentation\/mapboxmaps\/screenbox\/min","title":"var min: ScreenCoordinate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/screenbox\/isequal(to:)","title":"func isEqual(to: ScreenBox) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/screenbox","title":"ScreenBox","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/screencoordinate\/init(x:y:)","title":"init(x: Double, y: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/screencoordinate\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/screencoordinate\/y","title":"var y: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/screencoordinate\/isequal(to:)","title":"func isEqual(to: ScreenCoordinate) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/screencoordinate","title":"ScreenCoordinate","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sdkinformation\/isequal(to:)","title":"func isEqual(to: SdkInformation) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/sdkinformation","title":"SdkInformation","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsservicefactory\/getinstance(storagetype:)","title":"static func getInstance(storageType: SettingsServiceStorageType) -> SettingsServiceInterface","type":"method"}],"path":"\/documentation\/mapboxmaps\/settingsservicefactory","title":"SettingsServiceFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/size\/init(width:height:)","title":"init(width: Float, height: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/size\/height","title":"var height: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/size\/width","title":"var width: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/size\/isequal(to:)","title":"func isEqual(to: Size) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/size","title":"Size","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/init(sourceid:timestamp:)","title":"init(sourceId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/payload","title":"var payload: SourceAdded","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourceadded","title":"SourceAdded","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/init(sourceid:type:loaded:tileid:dataid:timeinterval:)","title":"init(sourceId: String, type: SourceDataLoadedType, loaded: Bool?, tileId: CanonicalTileID, dataId: String?, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/dataid","title":"var dataId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/loaded","title":"var loaded: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/payload","title":"var payload: SourceDataLoaded","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/tileid","title":"var tileId: CanonicalTileID?","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/type","title":"var type: SourceDataLoadedType","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourcedataloaded","title":"SourceDataLoaded","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcequeryoptions\/init(sourcelayerids:filter:)","title":"init(sourceLayerIds: [String]?, filter: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcequeryoptions\/filter","title":"var filter: Any","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcequeryoptions\/sourcelayerids","title":"var sourceLayerIds: [String]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourcequeryoptions","title":"SourceQueryOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/init(sourceid:timestamp:)","title":"init(sourceId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/payload","title":"var payload: SourceRemoved","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourceremoved","title":"SourceRemoved","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloaded\/init(type:timeinterval:)","title":"init(type: StyleDataLoadedType, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloaded\/payload","title":"var payload: StyleDataLoaded","type":"property"},{"path":"\/documentation\/mapboxmaps\/styledataloaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/styledataloaded\/type","title":"var type: StyleDataLoadedType","type":"property"}],"path":"\/documentation\/mapboxmaps\/styledataloaded","title":"StyleDataLoaded","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/init(imageid:timestamp:)","title":"init(imageId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/imageid","title":"var imageId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/payload","title":"var payload: StyleImageMissing","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleimagemissing","title":"StyleImageMissing","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/init(imageid:timestamp:)","title":"init(imageId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/imageid","title":"var imageId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/payload","title":"var payload: StyleImageRemoveUnused","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleimageremoveunused","title":"StyleImageRemoveUnused","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleloaded\/init(timeinterval:)","title":"init(timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleloaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleloaded","title":"StyleLoaded","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/json","title":"var JSON: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/alllayeridentifiers","title":"var allLayerIdentifiers: [LayerInfo]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/alllightidentifiers","title":"var allLightIdentifiers: [LightInfo]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/allsourceidentifiers","title":"var allSourceIdentifiers: [SourceInfo]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/defaultcamera","title":"var defaultCamera: CameraOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/isloaded","title":"var isLoaded: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/isstyleloaded","title":"var isStyleLoaded: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/projection","title":"var projection: StyleProjection","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/styledefaultcamera","title":"var styleDefaultCamera: CameraOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/stylejson","title":"var styleJSON: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/styletransition","title":"var styleTransition: TransitionOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/styleuri","title":"var styleURI: StyleURI?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/transition","title":"var transition: TransitionOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/uri","title":"var uri: StyleURI?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addcustomgeometrysource(withid:options:)","title":"func addCustomGeometrySource(withId: String, options: CustomGeometrySourceOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addcustomlayer(withid:layerhost:layerposition:)","title":"func addCustomLayer(withId: String, layerHost: CustomLayerHost, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addgeojsonsourcefeatures(forsourceid:features:dataid:)","title":"func addGeoJSONSourceFeatures(forSourceId: String, features: [Feature], dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addimage(_:id:sdf:contentinsets:)","title":"func addImage(UIImage, id: String, sdf: Bool, contentInsets: UIEdgeInsets) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addimage(_:id:sdf:stretchx:stretchy:content:)","title":"func addImage(UIImage, id: String, sdf: Bool, stretchX: [ImageStretches], stretchY: [ImageStretches], content: ImageContent?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addlayer(_:layerposition:)","title":"func addLayer(Layer, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addlayer(with:layerposition:)","title":"func addLayer(with: [String : Any], layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addpersistentcustomlayer(withid:layerhost:layerposition:)","title":"func addPersistentCustomLayer(withId: String, layerHost: CustomLayerHost, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addpersistentlayer(_:layerposition:)","title":"func addPersistentLayer(Layer, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addpersistentlayer(with:layerposition:)","title":"func addPersistentLayer(with: [String : Any], layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addsource(_:dataid:)","title":"func addSource(Source, dataId: String?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/addsource(withid:properties:)","title":"func addSource(withId: String, properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/atmosphereproperty(_:)","title":"func atmosphereProperty(String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/image(withid:)","title":"func image(withId: String) -> UIImage?","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/imageexists(withid:)","title":"func imageExists(withId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/invalidatecustomgeometrysourceregion(forsourceid:bounds:)","title":"func invalidateCustomGeometrySourceRegion(forSourceId: String, bounds: CoordinateBounds) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/invalidatecustomgeometrysourcetile(forsourceid:tileid:)","title":"func invalidateCustomGeometrySourceTile(forSourceId: String, tileId: CanonicalTileID) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/ispersistentlayer(id:)","title":"func isPersistentLayer(id: String) throws -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/layer(withid:)","title":"func layer(withId: String) throws -> Layer","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/layer(withid:type:)","title":"func layer<T>(withId: String, type: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/layerexists(withid:)","title":"func layerExists(withId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/layerproperties(for:)","title":"func layerProperties(for: String) throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/layerproperty(for:property:)","title":"func layerProperty(for: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/layerpropertyvalue(for:property:)","title":"func layerPropertyValue(for: String, property: String) -> Any","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/lightproperty(for:property:)","title":"func lightProperty(for: String, property: String) -> Any","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/localizelabels(into:forlayerids:)","title":"func localizeLabels(into: Locale, forLayerIds: [String]?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/movelayer(withid:to:)","title":"func moveLayer(withId: String, to: LayerPosition) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/removeatmosphere()","title":"func removeAtmosphere() throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/removegeojsonsourcefeatures(forsourceid:featureids:dataid:)","title":"func removeGeoJSONSourceFeatures(forSourceId: String, featureIds: [String], dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/removeimage(withid:)","title":"func removeImage(withId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/removelayer(withid:)","title":"func removeLayer(withId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/removesource(withid:)","title":"func removeSource(withId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/removeterrain()","title":"func removeTerrain()","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setatmosphere(_:)","title":"func setAtmosphere(Atmosphere) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setatmosphere(properties:)","title":"func setAtmosphere(properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setatmosphereproperty(_:value:)","title":"func setAtmosphereProperty(String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setcustomgeometrysourcetiledata(forsourceid:tileid:features:)","title":"func setCustomGeometrySourceTileData(forSourceId: String, tileId: CanonicalTileID, features: [Feature]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setlayerproperties(for:properties:)","title":"func setLayerProperties(for: String, properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setlayerproperty(for:property:value:)","title":"func setLayerProperty(for: String, property: String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setlightproperty(for:property:value:)","title":"func setLightProperty(for: String, property: String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setlights(_:)","title":"func setLights(FlatLight) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setprojection(_:)","title":"func setProjection(StyleProjection) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setsourceproperties(for:properties:)","title":"func setSourceProperties(for: String, properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setsourceproperty(for:property:value:)","title":"func setSourceProperty(for: String, property: String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setterrain(_:)","title":"func setTerrain(Terrain) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setterrain(properties:)","title":"func setTerrain(properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/setterrainproperty(_:value:)","title":"func setTerrainProperty(String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/source(withid:)","title":"func source(withId: String) throws -> Source","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/source(withid:type:)","title":"func source<T>(withId: String, type: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/sourceexists(withid:)","title":"func sourceExists(withId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/sourceproperties(for:)","title":"func sourceProperties(for: String) throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/sourceproperty(for:property:)","title":"func sourceProperty(for: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/terrainproperty(_:)-62fbm","title":"func terrainProperty(String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/terrainproperty(_:)-ew0t","title":"func terrainProperty(String) -> Any","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/updategeojsonsource(withid:data:dataid:)","title":"func updateGeoJSONSource(withId: String, data: GeoJSONSourceData, dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/updategeojsonsource(withid:geojson:dataid:)","title":"func updateGeoJSONSource(withId: String, geoJSON: GeoJSONObject, dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/updategeojsonsourcefeatures(forsourceid:features:dataid:)","title":"func updateGeoJSONSourceFeatures(forSourceId: String, features: [Feature], dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/updateimagesource(withid:image:)","title":"func updateImageSource(withId: String, image: UIImage) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/updatelayer(withid:type:update:)","title":"func updateLayer<T>(withId: String, type: T.Type, update: (inout T) throws -> Void) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/layerpropertydefaultvalue(for:property:)","title":"static func layerPropertyDefaultValue(for: LayerType, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd\/sourcepropertydefaultvalue(for:property:)","title":"static func sourcePropertyDefaultValue(for: String, property: String) -> StylePropertyValue","type":"method"}],"path":"\/documentation\/mapboxmaps\/stylemanager-46yjd","title":"StyleManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyleatmosphereproperty(forproperty:)","title":"func getStyleAtmosphereProperty(forProperty: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyledefaultcamera()","title":"func getStyleDefaultCamera() -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyleimage(forimageid:)","title":"func getStyleImage(forImageId: String) -> Image?","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyleimports()","title":"func getStyleImports() -> [StyleObjectInfo]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstylejson()","title":"func getStyleJSON() -> String","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstylelayerproperty(forlayerid:property:)","title":"func getStyleLayerProperty(forLayerId: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstylelayers()","title":"func getStyleLayers() -> [StyleObjectInfo]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyleprojectionproperty(forproperty:)","title":"func getStyleProjectionProperty(forProperty: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstylesourceproperty(forsourceid:property:)","title":"func getStyleSourceProperty(forSourceId: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstylesources()","title":"func getStyleSources() -> [StyleObjectInfo]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyleterrainproperty(forproperty:)","title":"func getStyleTerrainProperty(forProperty: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyletransition()","title":"func getStyleTransition() -> TransitionOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstyleuri()","title":"func getStyleURI() -> String","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/hasstyleimage(forimageid:)","title":"func hasStyleImage(forImageId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/hasstylemodel(formodelid:)","title":"func hasStyleModel(forModelId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/isstyleloaded()","title":"func isStyleLoaded() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/setstylejsonforjson(_:)","title":"func setStyleJSONForJson(String)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/setstyletransitionfor(_:)","title":"func setStyleTransitionFor(TransitionOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/setstyleuriforuri(_:)","title":"func setStyleURIForUri(String)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/stylelayerexists(forlayerid:)","title":"func styleLayerExists(forLayerId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/stylesourceexists(forsourceid:)","title":"func styleSourceExists(forSourceId: String) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstylelayerpropertydefaultvalue(forlayertype:property:)","title":"class func getStyleLayerPropertyDefaultValue(forLayerType: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k\/getstylesourcepropertydefaultvalue(forsourcetype:property:)","title":"class func getStyleSourcePropertyDefaultValue(forSourceType: String, property: String) -> StylePropertyValue","type":"method"}],"path":"\/documentation\/mapboxmaps\/stylemanager-9t53k","title":"StyleManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleobjectinfo\/init(id:type:)","title":"init(id: String, type: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleobjectinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleobjectinfo\/type","title":"var type: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleobjectinfo","title":"StyleObjectInfo","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepack\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/glyphsrasterizationmode","title":"var glyphsRasterizationMode: GlyphsRasterizationMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/styleuri","title":"var styleURI: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepack","title":"StylePack","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.class\/init(type:message:)","title":"init(type: StylePackErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.class\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.class\/type","title":"var type: StylePackErrorType","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.class","title":"StylePackError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/init(completedresourcecount:completedresourcesize:erroredresourcecount:requiredresourcecount:loadedresourcecount:loadedresourcesize:)","title":"init(completedResourceCount: UInt64, completedResourceSize: UInt64, erroredResourceCount: UInt64, requiredResourceCount: UInt64, loadedResourceCount: UInt64, loadedResourceSize: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/erroredresourcecount","title":"var erroredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/loadedresourcecount","title":"var loadedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/loadedresourcesize","title":"var loadedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackloadprogress","title":"StylePackLoadProgress","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvalue\/init(value:kind:)","title":"init(value: Any, kind: StylePropertyValueKind)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvalue\/kind","title":"var kind: StylePropertyValueKind","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvalue\/value","title":"var value: Any","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvalue","title":"StylePropertyValue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/init(value:)","title":"init(value: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/type","title":"var type: TileCacheBudgetType","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/value","title":"var value: Any","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/getinmegabytes()","title":"func getInMegabytes() -> TileCacheBudgetInMegabytes","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/getintiles()","title":"func getInTiles() -> TileCacheBudgetInTiles","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/istilecachebudgetinmegabytes()","title":"func isTileCacheBudgetInMegabytes() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/istilecachebudgetintiles()","title":"func isTileCacheBudgetInTiles() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/fromtilecachebudget(_:)-6xyvi","title":"class func fromTileCacheBudget(TileCacheBudgetInTiles) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/fromtilecachebudget(_:)-8jmbb","title":"class func fromTileCacheBudget(TileCacheBudgetInMegabytes) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudget","title":"TileCacheBudget","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes\/init(size:)","title":"init(size: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes\/size","title":"var size: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes\/isequaltotilecachebudget(_:)","title":"func isEqualToTileCacheBudget(TileCacheBudgetInMegabytes) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes","title":"TileCacheBudgetInMegabytes","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles\/init(size:)","title":"init(size: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles\/size","title":"var size: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles\/isequaltotilecachebudget(_:)","title":"func isEqualToTileCacheBudget(TileCacheBudgetInTiles) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles","title":"TileCacheBudgetInTiles","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/maxzoom","title":"var maxZoom: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/minzoom","title":"var minZoom: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/roundzoom","title":"var roundZoom: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/tilesize","title":"var tileSize: NSNumber?","type":"property"}],"path":"\/documentation\/mapboxmaps\/tilecoveroptions","title":"TileCoverOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/init(tolerance:tilesize:buffer:clip:wrap:)","title":"init(tolerance: Double, tileSize: UInt16, buffer: UInt16, clip: Bool, wrap: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/buffer","title":"var buffer: UInt16","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/clip","title":"var clip: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/tilesize","title":"var tileSize: UInt16","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/tolerance","title":"var tolerance: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/wrap","title":"var wrap: Bool","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileoptions","title":"TileOptions","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregion\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregion\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregion\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregion\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregion\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregion","title":"TileRegion","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.class\/init(type:message:)","title":"init(type: TileRegionErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.class\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.class\/type","title":"var type: TileRegionErrorType","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionerror-swift.class","title":"TileRegionError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogress\/init(completedresourcecount:completedresourcesize:erroredresourcecount:requiredresourcecount:loadedresourcecount:loadedresourcesize:)","title":"init(completedResourceCount: UInt64, completedResourceSize: UInt64, erroredResourceCount: UInt64, requiredResourceCount: UInt64, loadedResourceCount: UInt64, loadedResourceSize: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogress\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogress\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogress\/erroredresourcecount","title":"var erroredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogress\/loadedresourcecount","title":"var loadedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogress\/loadedresourcesize","title":"var loadedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogress\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionloadprogress","title":"TileRegionLoadProgress","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreoptions\/diskquota","title":"class var diskQuota: String!","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilestoreoptions\/mapboxapiurl","title":"class var mapboxAPIURL: String!","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilestoreoptions\/tileurltemplate","title":"class var tileURLTemplate: String!","type":"property"}],"path":"\/documentation\/mapboxmaps\/tilestoreoptions","title":"TileStoreOptions","type":"class"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptor","title":"TilesetDescriptor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transfererror\/init(code:message:)","title":"init(code: TransferErrorCode, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transfererror\/code","title":"var code: TransferErrorCode","type":"property"},{"path":"\/documentation\/mapboxmaps\/transfererror\/message","title":"var message: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/transfererror","title":"TransferError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/init(filepath:url:headers:metadata:mediatype:networkrestriction:sdkinformation:timeout:)","title":"init(filePath: String, url: String, headers: [String : String], metadata: String, mediaType: String, networkRestriction: NetworkRestriction, sdkInformation: SdkInformation, timeout: UInt64)","type":"init"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/init(filepath:url:headers:metadata:mediatype:sdkinformation:)","title":"init(filePath: String, url: String, headers: [String : String], metadata: String, mediaType: String, sdkInformation: SdkInformation)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/filepath","title":"var filePath: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/headers","title":"var headers: [String : String]","type":"property"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/mediatype","title":"var mediaType: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/metadata","title":"var metadata: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/networkrestriction","title":"var networkRestriction: NetworkRestriction","type":"property"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/sdkinformation","title":"var sdkInformation: SdkInformation","type":"property"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/timeout","title":"var timeout: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/uploadoptions\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/uploadoptions","title":"UploadOptions","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/valueconverter\/tojson(forvalue:)","title":"class func toJson(forValue: Any) -> String","type":"method"},{"path":"\/documentation\/mapboxmaps\/valueconverter\/tojson(forvalue:indent:)","title":"class func toJson(forValue: Any, indent: UInt32) -> String","type":"method"}],"path":"\/documentation\/mapboxmaps\/valueconverter","title":"ValueConverter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec3\/init(x:y:z:)","title":"init(x: Double, y: Double, z: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec3\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec3\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec3\/z","title":"var z: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/vec3","title":"Vec3","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec4\/init(x:y:z:w:)","title":"init(x: Double, y: Double, z: Double, w: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec4\/w","title":"var w: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec4\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec4\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec4\/z","title":"var z: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/vec4","title":"Vec4","type":"class"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions-swift.class","title":"ViewAnnotationOptions","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/height","title":"var height: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/lefttopcoordinate","title":"var leftTopCoordinate: ScreenCoordinate","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/width","title":"var width: UInt32","type":"property"}],"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor","title":"ViewAnnotationPositionDescriptor","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate\/applelocationprovider(_:didchangeaccuracyauthorization:)","title":"func appleLocationProvider(AppleLocationProvider, didChangeAccuracyAuthorization: CLAccuracyAuthorization)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate\/applelocationprovider(_:didfailwitherror:)","title":"func appleLocationProvider(AppleLocationProvider, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate\/applelocationprovidershoulddisplayheadingcalibration(_:)","title":"func appleLocationProviderShouldDisplayHeadingCalibration(AppleLocationProvider) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate","title":"AppleLocationProviderDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cancelable\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/mapboxmaps\/cancelable","title":"Cancelable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/openglcontextlost()","title":"func openGLContextLost()","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/prerender(_:mtlcommandbuffer:)","title":"func prerender(CustomLayerRenderParameters, mtlCommandBuffer: MTLCommandBuffer) -> CustomLayerRenderConfiguration","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/render(_:mtlcommandbuffer:mtlrenderpassdescriptor:)","title":"func render(CustomLayerRenderParameters, mtlCommandBuffer: MTLCommandBuffer, mtlRenderPassDescriptor: MTLRenderPassDescriptor)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/render(totile:mtlrendercommandencoder:)","title":"func render(toTile: CanonicalTileID, mtlRenderCommandEncoder: MTLRenderCommandEncoder)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderopengl(_:)","title":"func renderOpenGL(CustomLayerRenderParameters)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderingwillend()","title":"func renderingWillEnd()","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderingwillstart(_:colorpixelformat:depthstencilpixelformat:)","title":"func renderingWillStart(MTLDevice, colorPixelFormat: UInt, depthStencilPixelFormat: UInt)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderingwillstartopengl()","title":"func renderingWillStartOpenGL()","type":"method"}],"path":"\/documentation\/mapboxmaps\/customlayerhost","title":"CustomLayerHost","type":"protocol"},{"path":"\/documentation\/mapboxmaps\/devicelocationprovider","title":"DeviceLocationProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/elevationdata\/getelevationfor(_:)","title":"func getElevationFor(CLLocationCoordinate2D) -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxmaps\/elevationdata\/getterrainexaggeration()","title":"func getTerrainExaggeration() -> Double","type":"method"}],"path":"\/documentation\/mapboxmaps\/elevationdata","title":"ElevationData","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expressionargumentconvertible\/expressionarguments","title":"var expressionArguments: [Expression.Argument]","type":"property"}],"path":"\/documentation\/mapboxmaps\/expressionargumentconvertible","title":"ExpressionArgumentConvertible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/foreignmembercontainer\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"}],"path":"\/documentation\/mapboxmaps\/foreignmembercontainer","title":"ForeignMemberContainer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobjectconvertible\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/mapboxmaps\/geojsonobjectconvertible","title":"GeoJSONObjectConvertible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometryconvertible\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/geometryconvertible","title":"GeometryConvertible","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/headingobserver\/onheadingupdate(_:)","title":"func onHeadingUpdate(Heading)","type":"method"}],"path":"\/documentation\/mapboxmaps\/headingobserver","title":"HeadingObserver","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/headingprovider\/latestheading","title":"var latestHeading: Heading?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/headingprovider\/add(headingobserver:)","title":"func add(headingObserver: HeadingObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/headingprovider\/remove(headingobserver:)","title":"func remove(headingObserver: HeadingObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/headingprovider","title":"HeadingProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpserviceinterceptorinterface\/ondownload(fordownload:)","title":"func onDownload(forDownload: DownloadOptions) -> DownloadOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/httpserviceinterceptorinterface\/onrequest(for:)","title":"func onRequest(for: HttpRequest) -> HttpRequest","type":"method"},{"path":"\/documentation\/mapboxmaps\/httpserviceinterceptorinterface\/onresponse(for:)","title":"func onResponse(for: HttpResponse) -> HttpResponse","type":"method"},{"path":"\/documentation\/mapboxmaps\/httpserviceinterceptorinterface\/onupload(forupload:)","title":"func onUpload(forUpload: UploadOptions) -> UploadOptions","type":"method"}],"path":"\/documentation\/mapboxmaps\/httpserviceinterceptorinterface","title":"HttpServiceInterceptorInterface","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationobserver\/onlocationupdatereceived(for:)","title":"func onLocationUpdateReceived(for: [Location])","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationobserver","title":"LocationObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationserviceobserver\/onaccuracyauthorizationchanged(for:)","title":"func onAccuracyAuthorizationChanged(for: AccuracyAuthorization)","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationserviceobserver\/onavailabilitychanged(forisavailable:)","title":"func onAvailabilityChanged(forIsAvailable: Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationserviceobserver\/onpermissionstatuschanged(forpermission:)","title":"func onPermissionStatusChanged(forPermission: PermissionStatus)","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationserviceobserver","title":"LocationServiceObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logwriterbackend\/writelog(for:message:)","title":"func writeLog(for: LoggingLevel, message: String)","type":"method"}],"path":"\/documentation\/mapboxmaps\/logwriterbackend","title":"LogWriterBackend","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionobserver\/erroroccurred(forerror:)","title":"func errorOccurred(forError: OfflineRegionError)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregionobserver\/statuschanged(for:)","title":"func statusChanged(for: OfflineRegionStatus)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregionobserver","title":"OfflineRegionObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsserviceinterface\/erase(key:)","title":"func erase(key: String) -> Result<Void, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxmaps\/settingsserviceinterface\/get(key:type:)","title":"func get<T>(key: String, type: T.Type) -> Result<T, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxmaps\/settingsserviceinterface\/get(key:type:defaultvalue:)","title":"func get<T>(key: String, type: T.Type, defaultValue: T) -> Result<T, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxmaps\/settingsserviceinterface\/has(key:)","title":"func has(key: String) -> Result<Bool, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxmaps\/settingsserviceinterface\/set(key:value:)","title":"func set<T>(key: String, value: T) -> Result<Void, SettingsServiceError>","type":"method"}],"path":"\/documentation\/mapboxmaps\/settingsserviceinterface","title":"SettingsServiceInterface","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolor","title":"var highColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolortransition","title":"var highColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/horizonblend","title":"var horizonBlend: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/horizonblendtransition","title":"var horizonBlendTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/range","title":"var range: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/rangetransition","title":"var rangeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolor","title":"var spaceColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolortransition","title":"var spaceColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/starintensity","title":"var starIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/starintensitytransition","title":"var starIntensityTransition: StyleTransition?","type":"property"}],"path":"\/documentation\/mapboxmaps\/atmosphere","title":"Atmosphere","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/init(from:)-9xec0","title":"init?(from: [LocationCoordinate2D]?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/init(southwest:northeast:)","title":"init(southWest: LocationCoordinate2D, northEast: LocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/northeast","title":"var northEast: LocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/southwest","title":"var southWest: LocationCoordinate2D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/init(from:)-4rkw3","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/boundingbox\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/boundingbox\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/boundingbox\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/boundingbox\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/boundingbox\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/boundingbox","title":"BoundingBox","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expressionargumentbuilder\/buildblock(_:)","title":"static func buildBlock(ExpressionArgumentConvertible...) -> [Expression.Argument]","type":"method"}],"path":"\/documentation\/mapboxmaps\/expressionargumentbuilder","title":"ExpressionArgumentBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurecollection\/init(features:)","title":"init(features: [Feature])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurecollection\/features","title":"var features: [Feature]","type":"property"},{"path":"\/documentation\/mapboxmaps\/featurecollection\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurecollection\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/featurecollection\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurecollection\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/featurecollection\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurecollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/featurecollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurecollection\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/mapboxmaps\/featurecollection\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/featurecollection","title":"FeatureCollection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/flatlight\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/anchor","title":"var anchor: Value<Anchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/intensity","title":"var intensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/intensitytransition","title":"var intensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/position","title":"var position: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/positiontransition","title":"var positionTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/type","title":"let type: LightType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/flatlight\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/flatlight","title":"FlatLight","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/init(_:)","title":"init(MultiPolygon)","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/init(geometries:)","title":"init(geometries: [Geometry])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/geometries","title":"var geometries: [Geometry]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/geometrycollection\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/geometrycollection\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/geometrycollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrycollection\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/geometrycollection\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geometrycollection","title":"GeometryCollection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrytype\/init(_:)","title":"init(UInt32)","type":"init"},{"path":"\/documentation\/mapboxmaps\/geometrytype\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrytype\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/geometrytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geometrytype","title":"GeometryType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heading\/init(direction:accuracy:timestamp:)","title":"init(direction: CLLocationDirection, accuracy: CLLocationDirection, timestamp: Date)","type":"init"},{"path":"\/documentation\/mapboxmaps\/heading\/init(from:)","title":"init(from: CLHeading)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heading\/accuracy","title":"var accuracy: CLLocationDirection","type":"property"},{"path":"\/documentation\/mapboxmaps\/heading\/direction","title":"var direction: CLLocationDirection","type":"property"},{"path":"\/documentation\/mapboxmaps\/heading\/timestamp","title":"var timestamp: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heading\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/heading\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/heading","title":"Heading","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lightinfo\/init(id:type:)","title":"init(id: String, type: LightType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lightinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/lightinfo\/type","title":"var type: LightType","type":"property"}],"path":"\/documentation\/mapboxmaps\/lightinfo","title":"LightInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/flat","title":"static let flat: LightType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/lighttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/lighttype","title":"LightType","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/indexedcoordinate\/coordinate","title":"let coordinate: Array<LocationCoordinate2D>.Element","type":"property"},{"path":"\/documentation\/mapboxmaps\/linestring\/indexedcoordinate\/distance","title":"let distance: LocationDistance","type":"property"},{"path":"\/documentation\/mapboxmaps\/linestring\/indexedcoordinate\/index","title":"let index: Array<LocationCoordinate2D>.Index","type":"property"}],"path":"\/documentation\/mapboxmaps\/linestring\/indexedcoordinate","title":"LineString.IndexedCoordinate","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/init(_:)-1ds6r","title":"init(Ring)","type":"init"},{"path":"\/documentation\/mapboxmaps\/linestring\/init(_:)-nl31","title":"init([LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"path":"\/documentation\/mapboxmaps\/linestring\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/bezier(resolution:sharpness:)","title":"func bezier(resolution: Int, sharpness: Double) -> LineString?","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/closestcoordinate(to:)","title":"func closestCoordinate(to: LocationCoordinate2D) -> LineString.IndexedCoordinate?","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/coordinatefromstart(distance:)","title":"func coordinateFromStart(distance: LocationDistance) -> LocationCoordinate2D?","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/distance(from:to:)","title":"func distance(from: LocationCoordinate2D?, to: LocationCoordinate2D?) -> LocationDistance?","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/indexedcoordinatefromstart(distance:)","title":"func indexedCoordinateFromStart(distance: LocationDistance) -> LineString.IndexedCoordinate?","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/intersections(with:)","title":"func intersections(with: LineString) -> [LocationCoordinate2D]","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/simplified(tolerance:highestquality:)","title":"func simplified(tolerance: Double, highestQuality: Bool) -> LineString","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/simplify(tolerance:highestquality:)","title":"func simplify(tolerance: Double, highestQuality: Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/sliced(from:to:)","title":"func sliced(from: LocationCoordinate2D?, to: LocationCoordinate2D?) -> LineString?","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/trimmed(from:distance:)","title":"func trimmed(from: LocationCoordinate2D, distance: LocationDistance) -> LineString?","type":"method"},{"path":"\/documentation\/mapboxmaps\/linestring\/trimmed(from:to:)","title":"func trimmed(from: LocationDistance, to: LocationDistance) -> LineString?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/linestring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/linestring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linestring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linestring\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/linestring\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linestring","title":"LineString","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/camerachanged","title":"static var cameraChanged: MapEventType<CameraChanged>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/mapidle","title":"static var mapIdle: MapEventType<MapIdle>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/maploaded","title":"static var mapLoaded: MapEventType<MapLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/maploadingerror","title":"static var mapLoadingError: MapEventType<MapLoadingError>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/renderframefinished","title":"static var renderFrameFinished: MapEventType<RenderFrameFinished>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/renderframestarted","title":"static var renderFrameStarted: MapEventType<RenderFrameStarted>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/resourcerequest","title":"static var resourceRequest: MapEventType<ResourceRequest>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/sourceadded","title":"static var sourceAdded: MapEventType<SourceAdded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/sourcedataloaded","title":"static var sourceDataLoaded: MapEventType<SourceDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/sourceremoved","title":"static var sourceRemoved: MapEventType<SourceRemoved>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styledataloaded","title":"static var styleDataLoaded: MapEventType<StyleDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styleimagemissing","title":"static var styleImageMissing: MapEventType<StyleImageMissing>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styleimageremoveunused","title":"static var styleImageRemoveUnused: MapEventType<StyleImageRemoveUnused>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styleloaded","title":"static var styleLoaded: MapEventType<StyleLoaded>","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapeventtype","title":"MapEventType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/init(_:)-20bqv","title":"init(Polygon)","type":"init"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/init(_:)-3haud","title":"init([[LocationCoordinate2D]])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/coordinates","title":"var coordinates: [[LocationCoordinate2D]]","type":"property"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/multilinestring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/multilinestring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/multilinestring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multilinestring\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/multilinestring\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/multilinestring","title":"MultiLineString","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipoint\/init(_:)","title":"init([LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipoint\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"path":"\/documentation\/mapboxmaps\/multipoint\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/multipoint\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipoint\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/multipoint\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/multipoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipoint\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/multipoint\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/multipoint","title":"MultiPoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/init(_:)-1pebz","title":"init([[[LocationCoordinate2D]]])","type":"init"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/init(_:)-990j","title":"init([Polygon])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/coordinates","title":"var coordinates: [[[LocationCoordinate2D]]]","type":"property"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/polygons","title":"var polygons: [Polygon]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/multipolygon\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/multipolygon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/multipolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/multipolygon\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/multipolygon\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/multipolygon","title":"MultiPolygon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/point\/init(_:)","title":"init(LocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/point\/coordinates","title":"var coordinates: LocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/point\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/point\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/point\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/point\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/point\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/point\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/point\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/point\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/point\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/point","title":"Point","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygon\/init(_:)","title":"init([[LocationCoordinate2D]])","type":"init"},{"path":"\/documentation\/mapboxmaps\/polygon\/init(center:radius:vertices:)","title":"init(center: LocationCoordinate2D, radius: LocationDistance, vertices: Int)","type":"init"},{"path":"\/documentation\/mapboxmaps\/polygon\/init(outerring:innerrings:)","title":"init(outerRing: Ring, innerRings: [Ring])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygon\/area","title":"var area: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygon\/center","title":"var center: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygon\/centerofmass","title":"var centerOfMass: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygon\/centroid","title":"var centroid: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygon\/coordinates","title":"var coordinates: [[LocationCoordinate2D]]","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygon\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygon\/innerrings","title":"var innerRings: [Ring]","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygon\/outerring","title":"var outerRing: Ring","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygon\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygon\/simplified(tolerance:highestquality:)","title":"func simplified(tolerance: Double, highestQuality: Bool) -> Polygon","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygon\/simplify(tolerance:highestquality:)","title":"func simplify(tolerance: Double, highestQuality: Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygon\/smooth(iterations:)","title":"func smooth(iterations: Int) -> Polygon","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygon\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/polygon\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygon\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/polygon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/polygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygon\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/polygon\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/polygon","title":"Polygon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/init(location:heading:)","title":"init(location: Location, heading: Heading?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/heading","title":"var heading: Heading?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/location","title":"var location: Location","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puckrenderingdata","title":"PuckRenderingData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/radiancoordinate2d\/init(_:)","title":"init(LocationCoordinate2D)","type":"init"},{"path":"\/documentation\/mapboxmaps\/radiancoordinate2d\/init(latitude:longitude:)","title":"init(latitude: LocationRadians, longitude: LocationRadians)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/radiancoordinate2d\/coordinate(at:facing:)","title":"func coordinate(at: RadianDistance, facing: Measurement<UnitAngle>) -> RadianCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/radiancoordinate2d\/direction(to:)","title":"func direction(to: RadianCoordinate2D) -> Measurement<UnitAngle>","type":"method"},{"path":"\/documentation\/mapboxmaps\/radiancoordinate2d\/distance(to:)","title":"func distance(to: RadianCoordinate2D) -> RadianDistance","type":"method"}],"path":"\/documentation\/mapboxmaps\/radiancoordinate2d","title":"RadianCoordinate2D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ring\/init(coordinates:)","title":"init(coordinates: [LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ring\/area","title":"var area: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/ring\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ring\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ring\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/ring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ring\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/ring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ring","title":"Ring","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/==(_:_:)","title":"static func == (SettingsServiceError, SettingsServiceError) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/init(description:)","title":"init(description: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/errordescription-553iv","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/errordescription-8442b","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/settingsserviceerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/settingsserviceerror","title":"SettingsServiceError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/init(just:)","title":"init(just: Payload)","type":"init"},{"path":"\/documentation\/mapboxmaps\/signal\/init(observeimpl:)","title":"init(observeImpl: ObserveImpl)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/observe(_:)","title":"func observe(Handler) -> AnyCancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/observenext(_:)","title":"func observeNext(Handler) -> AnyCancelable","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/handler","title":"Signal.Handler","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/signal\/observeimpl","title":"Signal.ObserveImpl","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/values-2frkp","title":"var values: AsyncPublisher<Self>","type":"property"},{"path":"\/documentation\/mapboxmaps\/signal\/values-2p8j3","title":"var values: AsyncThrowingPublisher<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/allsatisfy(_:)","title":"func allSatisfy((Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/append(_:)-1g6vb","title":"func append<S>(S) -> Publishers.Concatenate<Self, Publishers.Sequence<S, Self.Failure>>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/append(_:)-1ni27","title":"func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/append(_:)-6270g","title":"func append<P>(P) -> Publishers.Concatenate<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/assertnofailure(_:file:line:)","title":"func assertNoFailure(String, file: StaticString, line: UInt) -> Publishers.AssertNoFailure<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/assign(to:)","title":"func assign(to: inout Published<Self.Output>.Publisher)","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/assign(to:on:)","title":"func assign<Root>(to: ReferenceWritableKeyPath<Root, Self.Output>, on: Root) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/breakpoint(receivesubscription:receiveoutput:receivecompletion:)","title":"func breakpoint(receiveSubscription: ((Subscription) -> Bool)?, receiveOutput: ((Self.Output) -> Bool)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Bool)?) -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/breakpointonerror()","title":"func breakpointOnError() -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/buffer(size:prefetch:whenfull:)","title":"func buffer(size: Int, prefetch: Publishers.PrefetchStrategy, whenFull: Publishers.BufferingStrategy<Self.Failure>) -> Publishers.Buffer<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/catch(_:)","title":"func `catch`<P>((Self.Failure) -> P) -> Publishers.Catch<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/collect()","title":"func collect() -> Publishers.Collect<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/collect(_:)","title":"func collect(Int) -> Publishers.CollectByCount<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/collect(_:options:)","title":"func collect<S>(Publishers.TimeGroupingStrategy<S>, options: S.SchedulerOptions?) -> Publishers.CollectByTime<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:)","title":"func combineLatest<P>(P) -> Publishers.CombineLatest<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:)-1cqmu","title":"func combineLatest<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.CombineLatest<Self, P>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:)-9r4l4","title":"func combineLatest<P, Q>(P, Q) -> Publishers.CombineLatest3<Self, P, Q>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:_:)-75n3e","title":"func combineLatest<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.CombineLatest3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:_:)-7ajai","title":"func combineLatest<P, Q, R>(P, Q, R) -> Publishers.CombineLatest4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:_:_:)","title":"func combineLatest<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.CombineLatest4<Self, P, Q, R>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/compactmap(_:)","title":"func compactMap<T>((Self.Output) -> T?) -> Publishers.CompactMap<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/contains(_:)","title":"func contains(Self.Output) -> Publishers.Contains<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/contains(where:)","title":"func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/count()","title":"func count() -> Publishers.Count<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/debounce(for:scheduler:options:)","title":"func debounce<S>(for: S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Debounce<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/decode(type:decoder:)","title":"func decode<Item, Coder>(type: Item.Type, decoder: Coder) -> Publishers.Decode<Self, Item, Coder>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/delay(for:tolerance:scheduler:options:)","title":"func delay<S>(for: S.SchedulerTimeType.Stride, tolerance: S.SchedulerTimeType.Stride?, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Delay<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/drop(untiloutputfrom:)","title":"func drop<P>(untilOutputFrom: P) -> Publishers.DropUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/drop(while:)","title":"func drop(while: (Self.Output) -> Bool) -> Publishers.DropWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/dropfirst(_:)","title":"func dropFirst(Int) -> Publishers.Drop<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/encode(encoder:)","title":"func encode<Coder>(encoder: Coder) -> Publishers.Encode<Self, Coder>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/erasetoanypublisher()","title":"func eraseToAnyPublisher() -> AnyPublisher<Self.Output, Self.Failure>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/erasetosignal()","title":"func eraseToSignal() -> Signal<Output>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/first()","title":"func first() -> Publishers.First<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/first(where:)","title":"func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-1zpsw","title":"func flatMap<T, P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-339mw","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-69s09","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<Publishers.SetFailureType<P, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-7kwg9","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Publishers.SetFailureType<Self, P.Failure>>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/handleevents(receivesubscription:receiveoutput:receivecompletion:receivecancel:receiverequest:)","title":"func handleEvents(receiveSubscription: ((Subscription) -> Void)?, receiveOutput: ((Self.Output) -> Void)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void)?, receiveCancel: (() -> Void)?, receiveRequest: ((Subscribers.Demand) -> Void)?) -> Publishers.HandleEvents<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/ignoreoutput()","title":"func ignoreOutput() -> Publishers.IgnoreOutput<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/last()","title":"func last() -> Publishers.Last<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/last(where:)","title":"func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/makeconnectable()","title":"func makeConnectable() -> Publishers.MakeConnectable<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:)-1bwzm","title":"func map<T>((Self.Output) -> T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:)-7hog5","title":"func map<T>(KeyPath<Self.Output, T>) -> Publishers.MapKeyPath<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:_:)","title":"func map<T0, T1>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>) -> Publishers.MapKeyPath2<Self, T0, T1>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:_:_:)","title":"func map<T0, T1, T2>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>, KeyPath<Self.Output, T2>) -> Publishers.MapKeyPath3<Self, T0, T1, T2>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/maperror(_:)","title":"func mapError<E>((Self.Failure) -> E) -> Publishers.MapError<Self, E>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/max()","title":"func max() -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/max(by:)","title":"func max(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/measureinterval(using:options:)","title":"func measureInterval<S>(using: S, options: S.SchedulerOptions?) -> Publishers.MeasureInterval<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:)-231ey","title":"func merge<P>(with: P) -> Publishers.Merge<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:)-r4t7","title":"func merge(with: Self) -> Publishers.MergeMany<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:)","title":"func merge<B, C>(with: B, C) -> Publishers.Merge3<Self, B, C>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:)","title":"func merge<B, C, D>(with: B, C, D) -> Publishers.Merge4<Self, B, C, D>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:)","title":"func merge<B, C, D, E>(with: B, C, D, E) -> Publishers.Merge5<Self, B, C, D, E>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:_:)","title":"func merge<B, C, D, E, F>(with: B, C, D, E, F) -> Publishers.Merge6<Self, B, C, D, E, F>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G>(with: B, C, D, E, F, G) -> Publishers.Merge7<Self, B, C, D, E, F, G>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G, H>(with: B, C, D, E, F, G, H) -> Publishers.Merge8<Self, B, C, D, E, F, G, H>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/min()","title":"func min() -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/min(by:)","title":"func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/multicast(_:)","title":"func multicast<S>(() -> S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/multicast(subject:)","title":"func multicast<S>(subject: S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/output(at:)","title":"func output(at: Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/output(in:)","title":"func output<R>(in: R) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prefix(_:)","title":"func prefix(Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prefix(untiloutputfrom:)","title":"func prefix<P>(untilOutputFrom: P) -> Publishers.PrefixUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prefix(while:)","title":"func prefix(while: (Self.Output) -> Bool) -> Publishers.PrefixWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prepend(_:)-5wmdr","title":"func prepend<P>(P) -> Publishers.Concatenate<P, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prepend(_:)-712a","title":"func prepend<S>(S) -> Publishers.Concatenate<Publishers.Sequence<S, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prepend(_:)-7e26d","title":"func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/print(_:to:)","title":"func print(String, to: (TextOutputStream)?) -> Publishers.Print<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/receive(on:options:)","title":"func receive<S>(on: S, options: S.SchedulerOptions?) -> Publishers.ReceiveOn<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/receive(subscriber:)","title":"func receive<S>(subscriber: S)","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/reduce(_:_:)","title":"func reduce<T>(T, (T, Self.Output) -> T) -> Publishers.Reduce<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/removeduplicates()","title":"func removeDuplicates() -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Output, Self.Output) -> Bool) -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/replaceempty(with:)","title":"func replaceEmpty(with: Self.Output) -> Publishers.ReplaceEmpty<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Publishers.ReplaceError<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/replacenil(with:)","title":"func replaceNil<T>(with: T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/retry(_:)","title":"func retry(Int) -> Publishers.Retry<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/scan(_:_:)","title":"func scan<T>(T, (T, Self.Output) -> T) -> Publishers.Scan<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/setfailuretype(to:)","title":"func setFailureType<E>(to: E.Type) -> Publishers.SetFailureType<Self, E>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/share()","title":"func share() -> Publishers.Share<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/sink(receivecompletion:receivevalue:)","title":"func sink(receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void), receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/sink(receivevalue:)","title":"func sink(receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/subscribe(_:)-8w44z","title":"func subscribe<S>(S) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/subscribe(_:)-9k3ns","title":"func subscribe<S>(S)","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/subscribe(on:options:)","title":"func subscribe<S>(on: S, options: S.SchedulerOptions?) -> Publishers.SubscribeOn<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/switchtolatest()","title":"func switchToLatest() -> Publishers.SwitchToLatest<Self.Output, Publishers.SetFailureType<Self, Self.Output.Failure>>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/throttle(for:scheduler:latest:)","title":"func throttle<S>(for: S.SchedulerTimeType.Stride, scheduler: S, latest: Bool) -> Publishers.Throttle<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/timeout(_:scheduler:options:customerror:)","title":"func timeout<S>(S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?, customError: (() -> Self.Failure)?) -> Publishers.Timeout<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryallsatisfy(_:)","title":"func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trycatch(_:)","title":"func tryCatch<P>((Self.Failure) throws -> P) -> Publishers.TryCatch<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trycompactmap(_:)","title":"func tryCompactMap<T>((Self.Output) throws -> T?) -> Publishers.TryCompactMap<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trycontains(where:)","title":"func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trydrop(while:)","title":"func tryDrop(while: (Self.Output) throws -> Bool) -> Publishers.TryDropWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryfilter(_:)","title":"func tryFilter((Self.Output) throws -> Bool) -> Publishers.TryFilter<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryfirst(where:)","title":"func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trylast(where:)","title":"func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trymap(_:)","title":"func tryMap<T>((Self.Output) throws -> T) -> Publishers.TryMap<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trymax(by:)","title":"func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trymin(by:)","title":"func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryprefix(while:)","title":"func tryPrefix(while: (Self.Output) throws -> Bool) -> Publishers.TryPrefixWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryreduce(_:_:)","title":"func tryReduce<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryReduce<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryremoveduplicates(by:)","title":"func tryRemoveDuplicates(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryRemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryscan(_:_:)","title":"func tryScan<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryScan<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:)","title":"func zip<P>(P) -> Publishers.Zip<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:)-7t2dp","title":"func zip<P, Q>(P, Q) -> Publishers.Zip3<Self, P, Q>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:)-9rivt","title":"func zip<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.Zip<Self, P>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:_:)-4j9qp","title":"func zip<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.Zip3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:_:)-6s811","title":"func zip<P, Q, R>(P, Q, R) -> Publishers.Zip4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:_:_:)","title":"func zip<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.Zip4<Self, P, Q, R>, T>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/failure","title":"Signal.Failure","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/signal\/output","title":"Signal.Output","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/signal\/publisher-implementations","title":"Publisher Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/signal","title":"Signal","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/init(name:)","title":"init(name: StyleProjectionName)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/name","title":"var name: StyleProjectionName","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styleprojection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleprojection","title":"StyleProjection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/core","title":"static let core: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/disabled","title":"static let disabled: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/enabled","title":"static let enabled: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/environmentvariablename","title":"static let environmentVariableName: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/platform","title":"static let platform: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/status","title":"static var status: Tracing","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tracing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/mapboxmaps\/tracing\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tracing\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/tracing\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tracing","title":"Tracing","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geometrytype_empty","title":"var GeometryType_Empty: GeometryType","type":"var"},{"path":"\/documentation\/mapboxmaps\/geometrytype_geometrycollection","title":"var GeometryType_GeometryCollection: GeometryType","type":"var"},{"path":"\/documentation\/mapboxmaps\/geometrytype_line","title":"var GeometryType_Line: GeometryType","type":"var"},{"path":"\/documentation\/mapboxmaps\/geometrytype_multiline","title":"var GeometryType_MultiLine: GeometryType","type":"var"},{"path":"\/documentation\/mapboxmaps\/geometrytype_multipoint","title":"var GeometryType_MultiPoint: GeometryType","type":"var"},{"path":"\/documentation\/mapboxmaps\/geometrytype_multipolygon","title":"var GeometryType_MultiPolygon: GeometryType","type":"var"},{"path":"\/documentation\/mapboxmaps\/geometrytype_point","title":"var GeometryType_Point: GeometryType","type":"var"},{"path":"\/documentation\/mapboxmaps\/geometrytype_polygon","title":"var GeometryType_Polygon: GeometryType","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mbmmaploadingerrortypetostring(_:)","title":"func MBMMapLoadingErrorTypeToString(MapLoadingErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrendermodetypetostring(_:)","title":"func MBMRenderModeTypeToString(RenderModeType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestdatasourcetypetostring(_:)","title":"func MBMRequestDataSourceTypeToString(RequestDataSourceType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequesterrortypetostring(_:)","title":"func MBMRequestErrorTypeToString(RequestErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestloadingmethodtypetostring(_:)","title":"func MBMRequestLoadingMethodTypeToString(RequestLoadingMethodType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestprioritytypetostring(_:)","title":"func MBMRequestPriorityTypeToString(RequestPriorityType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestresourcetypetostring(_:)","title":"func MBMRequestResourceTypeToString(RequestResourceType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmresponsesourcetypetostring(_:)","title":"func MBMResponseSourceTypeToString(ResponseSourceType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmsourcedataloadedtypetostring(_:)","title":"func MBMSourceDataLoadedTypeToString(SourceDataLoadedType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmstyledataloadedtypetostring(_:)","title":"func MBMStyleDataLoadedTypeToString(StyleDataLoadedType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmstylepackerrortypetostring(_:)","title":"func MBMStylePackErrorTypeToString(StylePackErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmtilestoreusagemodetostring(_:)","title":"func MBMTileStoreUsageModeToString(TileStoreUsageMode) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxaccuracyauthorizationtostring(_:)","title":"func MBXAccuracyAuthorizationToString(AccuracyAuthorization) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxhttpmethodtostring(_:)","title":"func MBXHttpMethodToString(HttpMethod) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxhttprequesterrortypetostring(_:)","title":"func MBXHttpRequestErrorTypeToString(HttpRequestErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxlocationerrorcodetostring(_:)","title":"func MBXLocationErrorCodeToString(LocationErrorCode) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxloggingleveltostring(_:)","title":"func MBXLoggingLevelToString(LoggingLevel) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxpermissionstatustostring(_:)","title":"func MBXPermissionStatusToString(PermissionStatus) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxtiledatadomaintostring(_:)","title":"func MBXTileDataDomainToString(TileDataDomain) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxtileregionerrortypetostring(_:)","title":"func MBXTileRegionErrorTypeToString(TileRegionErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbxtransfererrorcodetostring(_:)","title":"func MBXTransferErrorCodeToString(TransferErrorCode) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/intersection(_:_:)","title":"func intersection(LineSegment, LineSegment) -> LocationCoordinate2D?","type":"func"},{"path":"\/documentation\/mapboxmaps\/mid(_:_:)","title":"func mid(LocationCoordinate2D, LocationCoordinate2D) -> LocationCoordinate2D","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerachangedcallback","title":"CameraChangedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/canceltilefunctioncallback","title":"CancelTileFunctionCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/feature-swift.typealias","title":"Feature","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/fetchtilefunctioncallback","title":"FetchTileFunctionCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/genericeventcallback","title":"GenericEventCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/geometry-swift.typealias","title":"Geometry","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/getlocationcallback","title":"GetLocationCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/httpresponsecallback","title":"HttpResponseCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/jsonarray","title":"JSONArray","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/jsonobject","title":"JSONObject","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/linesegment","title":"LineSegment","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/locationcoordinate2d","title":"LocationCoordinate2D","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/locationdegrees","title":"LocationDegrees","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/locationdirection","title":"LocationDirection","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/locationdistance","title":"LocationDistance","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/locationradians","title":"LocationRadians","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/mapidlecallback","title":"MapIdleCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/maploadedcallback","title":"MapLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/maploadingerrorcallback","title":"MapLoadingErrorCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/perfstatscollectedcallback","title":"PerfStatsCollectedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/radiandistance","title":"RadianDistance","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/renderframefinishedcallback","title":"RenderFrameFinishedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/renderframestartedcallback","title":"RenderFrameStartedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/resourcerequestcallback","title":"ResourceRequestCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/sourceaddedcallback","title":"SourceAddedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedcallback","title":"SourceDataLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/sourceremovedcallback","title":"SourceRemovedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styledataloadedcallback","title":"StyleDataLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styleimagemissingcallback","title":"StyleImageMissingCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunusedcallback","title":"StyleImageRemoveUnusedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styleloadedcallback","title":"StyleLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogresscallback","title":"StylePackLoadProgressCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/tileregionloadprogresscallback","title":"TileRegionLoadProgressCallback","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/exact","title":"case exact","type":"case"},{"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/inexact","title":"case inexact","type":"case"},{"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/accuracyauthorization\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/accuracyauthorization","title":"AccuracyAuthorization","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/high","title":"case high","type":"case"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/highest","title":"case highest","type":"case"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/low","title":"case low","type":"case"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/passive","title":"case passive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/accuracylevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/accuracylevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/accuracylevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/accuracylevel","title":"AccuracyLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/heightonly","title":"case heightOnly","type":"case"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/widthandheight","title":"case widthAndHeight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/constrainmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/constrainmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/constrainmode","title":"ConstrainMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/shared","title":"case shared","type":"case"},{"path":"\/documentation\/mapboxmaps\/contextmode\/unique","title":"case unique","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/contextmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/contextmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/contextmode","title":"ContextMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(_:)-22zh1","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(_:)-2g91b","title":"init(String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(_:)-4tjj5","title":"init<Source>(Source)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(floatliteral:)","title":"init(floatLiteral: FloatLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/init(rawvalue:)","title":"init?(rawValue: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/rawvalue-swift.property","title":"var rawValue: Any","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureidentifier\/rawvalue-swift.typealias","title":"FeatureIdentifier.RawValue","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/featureidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/featureidentifier","title":"FeatureIdentifier","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/feature(_:)","title":"case feature(Feature)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/featurecollection(_:)","title":"case featureCollection(FeatureCollection)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/geometry(_:)","title":"case geometry(Geometry)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/init(_:)","title":"init(GeoJSONObjectConvertible)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/geojsonobject\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/geojsonobject\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/geojsonobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/expressionarguments","title":"var expressionArguments: [Expression.Argument]","type":"property"}],"path":"\/documentation\/mapboxmaps\/geojsonobject\/expressionargumentconvertible-implementations","title":"ExpressionArgumentConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonobject\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/mapboxmaps\/geojsonobject\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geojsonobject","title":"GeoJSONObject","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/feature","title":"case feature","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/geometry","title":"case geometry","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/nsarray","title":"case nsArray","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/nsstring","title":"case nsString","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedatatype","title":"GeoJSONSourceDataType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/allglyphsrasterizedlocally","title":"case allGlyphsRasterizedLocally","type":"case"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/ideographsrasterizedlocally","title":"case ideographsRasterizedLocally","type":"case"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/noglyphsrasterizedlocally","title":"case noGlyphsRasterizedLocally","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode","title":"GlyphsRasterizationMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/mapboxmaps\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/mapboxmaps\/httpmethod\/post","title":"case post","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/httpmethod","title":"HttpMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/connectionerror","title":"case connectionError","type":"case"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/othererror","title":"case otherError","type":"case"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/rangeerror","title":"case rangeError","type":"case"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/requestcancelled","title":"case requestCancelled","type":"case"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/sslerror","title":"case sslError","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/httprequesterrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/httprequesterrortype","title":"HttpRequestErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/array(_:)","title":"case array(JSONArray)","type":"case"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/object(_:)","title":"case object(JSONObject)","type":"case"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(_:)-2e69q","title":"init(JSONArray)","type":"init"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(_:)-4mwc5","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(_:)-6c1tu","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(_:)-7bkw0","title":"init(Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(_:)-88gx4","title":"init(JSONObject)","type":"init"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(_:)-8i3em","title":"init(String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(arrayliteral:)","title":"init(arrayLiteral: JSONValue.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/arrayliteralelement","title":"JSONValue.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(booleanliteral:)","title":"init(booleanLiteral: BooleanLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (JSONValue.Key, JSONValue.Value)...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/key","title":"JSONValue.Key","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/value","title":"JSONValue.Value","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(floatliteral:)","title":"init(floatLiteral: FloatLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/init(rawvalue:)","title":"init?(rawValue: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/rawvalue-swift.property","title":"var rawValue: Any","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/jsonvalue\/rawvalue-swift.typealias","title":"JSONValue.RawValue","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/jsonvalue\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/jsonvalue","title":"JSONValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/accessdenied","title":"case accessDenied","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/communicationfailure","title":"case communicationFailure","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/failedtodetectlocation","title":"case failedToDetectLocation","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/invalidargument","title":"case invalidArgument","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/notavailable","title":"case notAvailable","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/notready","title":"case notReady","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/notsupported","title":"case notSupported","type":"case"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/locationerrorcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationerrorcode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationerrorcode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/locationerrorcode","title":"LocationErrorCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/logginglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logginglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/logginglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/logginglevel","title":"LoggingLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/collision","title":"case collision","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/depthbuffer","title":"case depthBuffer","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/light","title":"case light","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/modelbounds","title":"case modelBounds","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/overdraw","title":"case overdraw","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/parsestatus","title":"case parseStatus","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/stencilclip","title":"case stencilClip","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/terrainwireframe","title":"case terrainWireframe","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/tileborders","title":"case tileBorders","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/timestamps","title":"case timestamps","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapdebugoptions","title":"MapDebugOptions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/glyphs","title":"case glyphs","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/source","title":"case source","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/sprite","title":"case sprite","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/style","title":"case style","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/tile","title":"case tile","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/maploadingerrortype","title":"MapLoadingErrorType","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/assetpath","title":"static var assetPath: URL","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/baseurl","title":"static var baseURL: URL","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/datapath","title":"static var dataPath: URL","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/tilestore","title":"static var tileStore: TileStore?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/tilestoreusagemode","title":"static var tileStoreUsageMode: TileStoreUsageMode","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions","title":"MapboxMapsOptions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/map","title":"case map","type":"case"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/viewport","title":"case viewport","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/modelscalemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/modelscalemode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/modelscalemode","title":"ModelScaleMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/networkrestriction\/disallowall","title":"case disallowAll","type":"case"},{"path":"\/documentation\/mapboxmaps\/networkrestriction\/disallowexpensive","title":"case disallowExpensive","type":"case"},{"path":"\/documentation\/mapboxmaps\/networkrestriction\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/networkrestriction\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/networkrestriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/networkrestriction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/networkrestriction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/networkrestriction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/networkrestriction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/networkrestriction","title":"NetworkRestriction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/downwards","title":"case downwards","type":"case"},{"path":"\/documentation\/mapboxmaps\/northorientation\/leftwards","title":"case leftwards","type":"case"},{"path":"\/documentation\/mapboxmaps\/northorientation\/rightwards","title":"case rightwards","type":"case"},{"path":"\/documentation\/mapboxmaps\/northorientation\/upwards","title":"case upwards","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/northorientation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/northorientation\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/northorientation","title":"NorthOrientation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/active","title":"case active","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/inactive","title":"case inactive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate","title":"OfflineRegionDownloadState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/connection","title":"case connection","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/diskfull","title":"case diskFull","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/other","title":"case other","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/ratelimit","title":"case rateLimit","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/server","title":"case server","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/tilecountlimitexceeded","title":"case tileCountLimitExceeded","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/offlineregionerrortype","title":"OfflineRegionErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/cumulativerenderingstats","title":"case cumulativeRenderingStats","type":"case"},{"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/perframerenderingstats","title":"case perFrameRenderingStats","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/perfsampleroptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/perfsampleroptions","title":"PerfSamplerOptions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/background","title":"case background","type":"case"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/denied","title":"case denied","type":"case"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/foreground","title":"case foreground","type":"case"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/granted","title":"case granted","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/permissionstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/permissionstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/permissionstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/permissionstatus","title":"PermissionStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/full","title":"case full","type":"case"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/partial","title":"case partial","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/rendermodetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/rendermodetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rendermodetype","title":"RenderModeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/nsarray","title":"case nsArray","type":"case"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/screenbox","title":"case screenBox","type":"case"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/screencoordinate","title":"case screenCoordinate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/renderedquerygeometrytype","title":"RenderedQueryGeometryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/asset","title":"case asset","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/database","title":"case database","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/filesystem","title":"case fileSystem","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/network","title":"case network","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/resourceloader","title":"case resourceLoader","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestdatasourcetype","title":"RequestDataSourceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/connection","title":"case connection","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/inofflinemode","title":"case inOfflineMode","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/other","title":"case other","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/ratelimit","title":"case rateLimit","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/server","title":"case server","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/success","title":"case success","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requesterrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requesterrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requesterrortype","title":"RequestErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/cache","title":"case cache","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/network","title":"case network","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype","title":"RequestLoadingMethodType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/low","title":"case low","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestprioritytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestprioritytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestprioritytype","title":"RequestPriorityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/glyphs","title":"case glyphs","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/model","title":"case model","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/source","title":"case source","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/spriteimage","title":"case spriteImage","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/spritejson","title":"case spriteJSON","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/style","title":"case style","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/tile","title":"case tile","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestresourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestresourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestresourcetype","title":"RequestResourceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/cache","title":"case cache","type":"case"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/localfile","title":"case localFile","type":"case"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/network","title":"case network","type":"case"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/tilestore","title":"case tileStore","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/responsesourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/responsesourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/responsesourcetype","title":"ResponseSourceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/nonpersistent","title":"case nonPersistent","type":"case"},{"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/persistent","title":"case persistent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/settingsservicestoragetype","title":"SettingsServiceStorageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/metadata","title":"case metadata","type":"case"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/tile","title":"case tile","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype","title":"SourceDataLoadedType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/sources","title":"case sources","type":"case"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/sprite","title":"case sprite","type":"case"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styledataloadedtype","title":"StyleDataLoadedType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/diskfull","title":"case diskFull","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/doesnotexist","title":"case doesNotExist","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/other","title":"case other","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/stylepackerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/stylepackerrortype","title":"StylePackErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/globe","title":"case globe","type":"case"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/mercator","title":"case mercator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styleprojectionname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleprojectionname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleprojectionname","title":"StyleProjectionName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/constant","title":"case constant","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/transition","title":"case transition","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind","title":"StylePropertyValueKind","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/tilecachebudgetinmegabytes","title":"case tileCacheBudgetInMegabytes","type":"case"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/tilecachebudgetintiles","title":"case tileCacheBudgetInTiles","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgettype","title":"TileCacheBudgetType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/adas","title":"case adas","type":"case"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/maps","title":"case maps","type":"case"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/navigation","title":"case navigation","type":"case"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/search","title":"case search","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tiledatadomain\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tiledatadomain\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tiledatadomain\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tiledatadomain","title":"TileDataDomain","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/diskfull","title":"case diskFull","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/doesnotexist","title":"case doesNotExist","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/other","title":"case other","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/tilecountexceeded","title":"case tileCountExceeded","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/tilesetdescriptor","title":"case tilesetDescriptor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tileregionerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tileregionerrortype","title":"TileRegionErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/readandupdate","title":"case readAndUpdate","type":"case"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/readonly","title":"case readOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tilestoreusagemode","title":"TileStoreUsageMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transfererrorcode\/filesystemerror","title":"case fileSystemError","type":"case"},{"path":"\/documentation\/mapboxmaps\/transfererrorcode\/networkerror","title":"case networkError","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transfererrorcode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transfererrorcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/transfererrorcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transfererrorcode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transfererrorcode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/transfererrorcode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/transfererrorcode","title":"TransferErrorCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transferstate\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/mapboxmaps\/transferstate\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/mapboxmaps\/transferstate\/inprogress","title":"case inProgress","type":"case"},{"path":"\/documentation\/mapboxmaps\/transferstate\/pending","title":"case pending","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transferstate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transferstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/transferstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transferstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transferstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/transferstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/transferstate","title":"TransferState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/center","title":"case center","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/left","title":"case left","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/right","title":"case right","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/top","title":"case top","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/topright","title":"case topRight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewannotationanchor","title":"ViewAnnotationAnchor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/flippedy","title":"case flippedY","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportmode","title":"ViewportMode","type":"enum"}],"path":"\/documentation\/mapboxmaps","title":"MapboxMaps","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}